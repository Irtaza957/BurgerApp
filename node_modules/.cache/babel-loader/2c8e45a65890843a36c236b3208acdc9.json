{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Components\\\\Layout\\\\Burger\\\\Burger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Burger.css';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\nimport { alertBanner, setAlertBanner } from '../../../Authentication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Burger = props => {\n  _s();\n\n  //transformation codes\n  // that is used to convert object(ingredients) into an array\n  //\"keys\" returns array of ingredients\n  let transformIngredients = Object.keys(props.ingredient) //\"igKey\" is argument that represents keys like 'salad','cheese'\n  .map(igKey => {\n    //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\n    // If ingredients is used 2 or more than 2 times, then create array for that ingredient\n    return [...Array(props.ingredient[igKey])].map((_, i) => {\n      //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\n      return /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        type: igKey\n      }, igKey + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    });\n  }) //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\n  .reduce((arr, el) => {\n    // console.log(el)\n    return arr.concat(el);\n  }, []);\n\n  if (transformIngredients.length === 0) {\n    transformIngredients = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 30\n    }, this);\n  }\n\n  const alert = useContext(alertBanner);\n  const setAlert = useContext(setAlertBanner);\n  const [hide, setHide] = useState(true);\n  console.log(alert);\n\n  const alertClose = () => {\n    setAlert(false);\n    console.log(\"hello\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Burger\",\n    children: [alert ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning alert-dismissible fade show\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Congratulation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this), \" Your order placed successfully\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: alertClose,\n          className: \"closeButton\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, void 0, false) : null, /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this), transformIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Burger, \"hryzwjM0dsAWPjkJtifdsxeLcOo=\");\n\n_c = Burger;\nexport default Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Components/Layout/Burger/Burger.js"],"names":["React","useContext","useState","BurgerIngredients","alertBanner","setAlertBanner","Burger","props","transformIngredients","Object","keys","ingredient","map","igKey","Array","_","i","reduce","arr","el","concat","length","alert","setAlert","hide","setHide","console","log","alertClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,WAAT,EAAqBC,cAArB,QAA2C,yBAA3C;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACD;AACA;AACC,MAAIC,oBAAoB,GAACC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,UAAlB,EACzB;AADyB,GAExBC,GAFwB,CAEpBC,KAAK,IAAE;AACR;AACA;AACA,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,UAAN,CAAiBE,KAAjB,CAAD,CAAT,EAAoCD,GAApC,CAAwC,CAACG,CAAD,EAAGC,CAAH,KAAO;AAClD;AACA,0BAAO,QAAC,iBAAD;AAAmC,QAAA,IAAI,EAAEH;AAAzC,SAAwBA,KAAK,GAAGG,CAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHM,CAAP;AAIH,GATwB,EAUzB;AAVyB,GAWxBC,MAXwB,CAWjB,CAACC,GAAD,EAAKC,EAAL,KAAU;AACd;AACA,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AAEH,GAfwB,EAevB,EAfuB,CAAzB;;AAgBA,MAAGX,oBAAoB,CAACa,MAArB,KAA8B,CAAjC,EAAmC;AAC/Bb,IAAAA,oBAAoB,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;AACH;;AACD,QAAMc,KAAK,GAACrB,UAAU,CAACG,WAAD,CAAtB;AACA,QAAMmB,QAAQ,GAACtB,UAAU,CAACI,cAAD,CAAzB;AACA,QAAM,CAACmB,IAAD,EAAMC,OAAN,IAAevB,QAAQ,CAAC,IAAD,CAA7B;AACAwB,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,QAAMM,UAAU,GAAC,MAAI;AACjBL,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAHD;;AAMA,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eAEGL,KAAK,gBACA;AAAA,6BAChB;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAiE,QAAA,IAAI,EAAC,OAAtE;AAAA,gCACA;AAAA,kCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,OAAO,EAAEM,UAAd;AAA0B,UAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADgB,qBADA,GAOF,IATN,eAYmB,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAZnB,EAaKpB,oBAbL,eAcI,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CArDD;;GAAMF,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React,{ useContext, useState } from 'react'\r\nimport './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport { alertBanner,setAlertBanner } from '../../../Authentication'\r\n\r\nconst Burger = (props) => {\r\n    //transformation codes\r\n   // that is used to convert object(ingredients) into an array\r\n   //\"keys\" returns array of ingredients\r\n    let transformIngredients=Object.keys(props.ingredient)\r\n    //\"igKey\" is argument that represents keys like 'salad','cheese'\r\n    .map(igKey=>{\r\n        //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\r\n        // If ingredients is used 2 or more than 2 times, then create array for that ingredient\r\n        return [...Array(props.ingredient[igKey])].map((_,i)=>{\r\n            //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\r\n            return <BurgerIngredients key={igKey + i} type={igKey}/>\r\n        })\r\n    })\r\n    //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\r\n    .reduce((arr,el)=>{\r\n        // console.log(el)\r\n        return arr.concat(el)\r\n        \r\n    },[])\r\n    if(transformIngredients.length===0){\r\n        transformIngredients=<p>Please start adding ingredients!</p>\r\n    }\r\n    const alert=useContext(alertBanner)\r\n    const setAlert=useContext(setAlertBanner)\r\n    const [hide,setHide]=useState(true)\r\n    console.log(alert);\r\n    const alertClose=()=>{\r\n        setAlert(false)\r\n        console.log(\"hello\")\r\n    }\r\n  \r\n   \r\n    return (\r\n       \r\n        <div className=\"Burger\">\r\n            \r\n         { alert?(\r\n                <>\r\n<div className='alert alert-warning alert-dismissible fade show' role=\"alert\">\r\n<div><strong>Congratulation!</strong> Your order placed successfully</div>\r\n<div onClick={alertClose} className=\"closeButton\" >X</div>\r\n</div>\r\n</>\r\n            ):null\r\n        }\r\n       \r\n                           <BurgerIngredients type=\"bread-top\"/>\r\n            {transformIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n"]},"metadata":{},"sourceType":"module"}