{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Authentication.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useState } from 'react';\nimport auth from './authentication/fire';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './authentication/Login';\nimport Layout from './Components/Layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\nimport Checkout from './container/Checkout/Checkout';\nimport Orders from './container/Orders/Orders';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport Spinner from './UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logoutButton = /*#__PURE__*/createContext();\nconst userName = /*#__PURE__*/createContext();\nconst alertBanner = /*#__PURE__*/createContext();\nconst setAlertBanner = /*#__PURE__*/createContext();\n\nconst Authentication = () => {\n  _s();\n\n  let [alert, setAlert] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n  const [hasAccount, sethasAccount] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [load, setLoad] = useState(true);\n  const [lod, setLod] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n  const Name = user === null || user === void 0 ? void 0 : user.email;\n\n  const register = async () => {\n    setLoad(false);\n    clearErrors();\n    const user = createUserWithEmailAndPassword(auth, email, password).catch(err => {\n      setLoad(true);\n\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(\"*Email already in use\");\n          break;\n\n        case \"auth/invalid-email\":\n          setEmailError(\"*Invalid Email\");\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(\"*Password should be atleast 6 characters\");\n          break;\n\n        default:\n          setEmailError('');\n      }\n    });\n  };\n\n  const login = () => {\n    setLoad(false);\n    clearErrors();\n    Redirect('/home');\n    const user = signInWithEmailAndPassword(auth, email, password).catch(err => {\n      setLoad(true);\n\n      switch (err.code) {\n        case \"auth/Invalid-email\":\n          setEmailError(\"*Invalid Email\");\n          break;\n\n        case \"auth/user-disabled\":\n          setEmailError(\"*User is disabled\");\n          break;\n\n        case \"auth/user-not-found\":\n          setEmailError(\"*User not found\");\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(\"*Wrong password\");\n          break;\n\n        default:\n          setEmailError('');\n      }\n    });\n  };\n\n  const logout = () => {\n    signOut(auth);\n    setLoad(true);\n    clearErrors();\n    clearInputs();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(logoutButton.Provider, {\n      value: logout,\n      children: /*#__PURE__*/_jsxDEV(userName.Provider, {\n        value: Name,\n        children: /*#__PURE__*/_jsxDEV(setAlertBanner.Provider, {\n          value: setAlert,\n          children: /*#__PURE__*/_jsxDEV(alertBanner.Provider, {\n            value: alert,\n            children: /*#__PURE__*/_jsxDEV(Layout, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/\",\n                  exact: true,\n                  children: /*#__PURE__*/_jsxDEV(Login, {\n                    email: email,\n                    password: password,\n                    setEmail: setEmail,\n                    setPassword: setPassword,\n                    handleSignup: register,\n                    handleLogin: login,\n                    emailError: emailError,\n                    passwordError: passwordError,\n                    hasAccount: hasAccount,\n                    setHasAccount: sethasAccount,\n                    load: load\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/home\",\n                  component: BurgerBuilder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/checkout\",\n                  component: Checkout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/orders\",\n                  component: Orders\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authentication, \"4qwtuDQ8dCz5KSBo6mnioaPHtNQ=\");\n\n_c = Authentication;\nexport default Authentication;\nexport { logoutButton, userName, alertBanner, setAlertBanner };\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Authentication.js"],"names":["React","createContext","useState","auth","Route","Switch","Login","Layout","BurgerBuilder","Checkout","Orders","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","Spinner","Redirect","logoutButton","userName","alertBanner","setAlertBanner","Authentication","alert","setAlert","password","setPassword","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","hasAccount","sethasAccount","user","setUser","load","setLoad","lod","setLod","clearInputs","clearErrors","currentUser","Name","register","catch","err","code","login","logout"],"mappings":"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","sourcesContent":["import React, { createContext} from 'react'\r\nimport {  useState } from 'react';\r\nimport auth from './authentication/fire';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './authentication/Login';\r\nimport Layout from './Components/Layout/Layout';\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './container/Checkout/Checkout';\r\nimport Orders from './container/Orders/Orders';\r\n\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n  } from \"firebase/auth\"\r\nimport Spinner from './UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n  const logoutButton=createContext()\r\n  const userName=createContext()\r\n  const alertBanner=createContext()\r\n  const setAlertBanner=createContext()\r\nconst Authentication = () => {\r\n  let [alert,setAlert]=useState(false)\r\n    const [password,setPassword]=useState(\"\")\r\n  const [email,setEmail]=useState(\"\")\r\n  const [emailError,setEmailError]=useState()\r\n  const [passwordError,setPasswordError]=useState()\r\n  const [hasAccount,sethasAccount]=useState(false)\r\n  const [user,setUser]=useState(\"\")\r\n  const [load,setLoad]=useState(true)\r\n  const [lod,setLod]=useState(false)\r\n\r\n  const clearInputs=()=>{\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  }\r\n\r\n  onAuthStateChanged(auth,(currentUser)=>{\r\n    setUser(currentUser)\r\n  \r\n  })\r\n  const Name=user?.email\r\n\r\n  const register=async()=>{\r\n    setLoad(false)\r\n    clearErrors()\r\n    const user=createUserWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    setLoad(true)\r\n    switch(err.code){\r\n      case \"auth/email-already-in-use\":\r\n        setEmailError(\"*Email already in use\")\r\n        break\r\n        case \"auth/invalid-email\":\r\n            setEmailError(\"*Invalid Email\")\r\n            break\r\n            case \"auth/weak-password\":\r\n              setPasswordError(\"*Password should be atleast 6 characters\")\r\n              break\r\n              default:\r\n                setEmailError('')\r\n    }\r\n  })\r\n  }\r\n  \r\n  const login=()=>{\r\n    setLoad(false)\r\n    clearErrors()\r\n    Redirect('/home')\r\n  const user=signInWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    setLoad(true)\r\n    switch(err.code){\r\n      case \"auth/Invalid-email\":\r\n        setEmailError(\"*Invalid Email\")\r\n        break\r\n        case \"auth/user-disabled\":\r\n          setEmailError(\"*User is disabled\")\r\n          break\r\n          case \"auth/user-not-found\":\r\n            setEmailError(\"*User not found\")\r\n            break\r\n            case \"auth/wrong-password\":\r\n              setPasswordError(\"*Wrong password\")\r\n              break\r\n              default:\r\n                setEmailError('')\r\n    }\r\n  })\r\n  }\r\n\r\n  const logout=()=>{\r\n     signOut(auth)\r\n     setLoad(true)\r\n     clearErrors()\r\n     clearInputs()\r\n  }\r\n\r\n  \r\n    return (\r\n        <div>   \r\n          <logoutButton.Provider value={logout}>\r\n               <userName.Provider value={Name}>\r\n                 <setAlertBanner.Provider value={setAlert}>\r\n                   <alertBanner.Provider value={alert}>\r\n           <Layout>\r\n           <Switch>\r\n             <Route path='/' exact >\r\n               <Login \r\n               email={email}\r\n               password={password}\r\n               setEmail={setEmail}\r\n               setPassword={setPassword}\r\n               handleSignup={register}\r\n               handleLogin={login}\r\n               emailError={emailError}\r\n               passwordError={passwordError}\r\n               hasAccount={hasAccount}\r\n               setHasAccount={sethasAccount}\r\n               load={load}\r\n               />\r\n             </Route>\r\n                   <Route path=\"/home\"  component={BurgerBuilder} />\r\n                   <Route path=\"/checkout\"  component={Checkout} />\r\n                   <Route path=\"/orders\"  component={Orders}/>\r\n           </Switch>\r\n       </Layout>\r\n       </alertBanner.Provider>\r\n      </setAlertBanner.Provider>\r\n       </userName.Provider>\r\n      </logoutButton.Provider>       \r\n              {/* {user?(\r\n                \r\n               <logoutButton.Provider value={logout}>\r\n               <userName.Provider value={Name}>\r\n                 <setAlertBanner.Provider value={setAlert}>\r\n                   <alertBanner.Provider value={alert}>\r\n           <Layout>\r\n           <Switch>\r\n             <Route path='/' exact ><Login/></Route>\r\n                   <Route path=\"/home\"  component={BurgerBuilder} />\r\n                   <Route path=\"/checkout\"  component={Checkout} />\r\n                   <Route path=\"/orders\"  component={Orders}/>\r\n           </Switch>\r\n       </Layout>\r\n       </alertBanner.Provider>\r\n      </setAlertBanner.Provider>\r\n       </userName.Provider>\r\n      </logoutButton.Provider>\r\n      ):(\r\n        <Login\r\n        email={email}\r\n        password={password}\r\n        setEmail={setEmail}\r\n        setPassword={setPassword}\r\n        handleSignup={register}\r\n        handleLogin={login}\r\n        emailError={emailError}\r\n        passwordError={passwordError}\r\n        hasAccount={hasAccount}\r\n        setHasAccount={sethasAccount}\r\n        load={load}\r\n        />\r\n      )} */}\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication\r\nexport {logoutButton , userName, alertBanner, setAlertBanner}\r\n"]},"metadata":{},"sourceType":"module"}