{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Components\\\\Layout\\\\Burger\\\\Burger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Burger.css';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\nimport { alertBanner, setAlertBanner } from '../../../Authentication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Burger = props => {\n  _s();\n\n  const alert = useContext(alertBanner);\n  const [hide, setHide] = useState(true);\n  console.log(alert);\n\n  const alertClose = () => {\n    setHide(false);\n  }; //transformation codes\n  // that is used to convert object(ingredients) into an array\n  //\"keys\" returns array of ingredients\n\n\n  let transformIngredients = Object.keys(props.ingredient) //\"igKey\" is argument that represents keys like 'salad','cheese'\n  .map(igKey => {\n    //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\n    // If ingredients is used 2 or more than 2 times, then create array for that ingredient\n    return [...Array(props.ingredient[igKey])].map((_, i) => {\n      //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\n      return /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        type: igKey\n      }, igKey + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    });\n  }) //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\n  .reduce((arr, el) => {\n    // console.log(el)\n    return arr.concat(el);\n  }, []);\n\n  if (transformIngredients.length === 0) {\n    transformIngredients = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 30\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Burger\",\n    children: [hide ? alert ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning alert-dismissible fade show\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Hurrah! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this), \" You order placed successfully.\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: alertClose,\n        className: \"btn-close\",\n        \"data-bs-dismiss\": \"alert\",\n        \"aria-label\": \"Close\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : null : null, /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this), transformIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Burger, \"ca+DFcHJ8zktwXnumwAaaAxq0uY=\");\n\n_c = Burger;\nexport default Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Components/Layout/Burger/Burger.js"],"names":["React","useContext","useState","BurgerIngredients","alertBanner","setAlertBanner","Burger","props","alert","hide","setHide","console","log","alertClose","transformIngredients","Object","keys","ingredient","map","igKey","Array","_","i","reduce","arr","el","concat","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,WAAT,EAAqBC,cAArB,QAA2C,yBAA3C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,KAAK,GAACP,UAAU,CAACG,WAAD,CAAtB;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,IAAD,CAA7B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QAAMK,UAAU,GAAC,MAAI;AACjBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD,CAJsB,CAOtB;AACD;AACA;;;AACC,MAAII,oBAAoB,GAACC,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACU,UAAlB,EACzB;AADyB,GAExBC,GAFwB,CAEpBC,KAAK,IAAE;AACR;AACA;AACA,WAAO,CAAC,GAAGC,KAAK,CAACb,KAAK,CAACU,UAAN,CAAiBE,KAAjB,CAAD,CAAT,EAAoCD,GAApC,CAAwC,CAACG,CAAD,EAAGC,CAAH,KAAO;AAClD;AACA,0BAAO,QAAC,iBAAD;AAAmC,QAAA,IAAI,EAAEH;AAAzC,SAAwBA,KAAK,GAAGG,CAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHM,CAAP;AAIH,GATwB,EAUzB;AAVyB,GAWxBC,MAXwB,CAWjB,CAACC,GAAD,EAAKC,EAAL,KAAU;AACd;AACA,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AAEH,GAfwB,EAevB,EAfuB,CAAzB;;AAgBA,MAAGX,oBAAoB,CAACa,MAArB,KAA8B,CAAjC,EAAmC;AAC/Bb,IAAAA,oBAAoB,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;AACH;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACKL,IAAI,GAAGD,KAAK,gBACT;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAiE,MAAA,IAAI,EAAC,OAAtE;AAAA,8BACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,kDAEd;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEK,UAA/B;AAA2C,QAAA,SAAS,EAAC,WAArD;AAAiE,2BAAgB,OAAjF;AAAyF,sBAAW,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFc;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAKX,IALG,GAKG,IANZ,eAUmB,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAVnB,EAWKC,oBAXL,eAYI,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH,CAhDD;;GAAMR,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React,{ useContext, useState } from 'react'\r\nimport './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport { alertBanner,setAlertBanner } from '../../../Authentication'\r\n\r\nconst Burger = (props) => {\r\n    const alert=useContext(alertBanner)\r\n    const [hide,setHide]=useState(true)\r\n    console.log(alert);\r\n    const alertClose=()=>{\r\n        setHide(false)\r\n    }\r\n    //transformation codes\r\n   // that is used to convert object(ingredients) into an array\r\n   //\"keys\" returns array of ingredients\r\n    let transformIngredients=Object.keys(props.ingredient)\r\n    //\"igKey\" is argument that represents keys like 'salad','cheese'\r\n    .map(igKey=>{\r\n        //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\r\n        // If ingredients is used 2 or more than 2 times, then create array for that ingredient\r\n        return [...Array(props.ingredient[igKey])].map((_,i)=>{\r\n            //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\r\n            return <BurgerIngredients key={igKey + i} type={igKey}/>\r\n        })\r\n    })\r\n    //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\r\n    .reduce((arr,el)=>{\r\n        // console.log(el)\r\n        return arr.concat(el)\r\n        \r\n    },[])\r\n    if(transformIngredients.length===0){\r\n        transformIngredients=<p>Please start adding ingredients!</p>\r\n    }\r\n   \r\n    return (\r\n       \r\n        <div className=\"Burger\">\r\n            {hide?( alert?(\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>Hurrah! </strong> You order placed successfully.\r\n  <button type=\"button\" onClick={alertClose} className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">X</button>\r\n</div>\r\n            ):null):null}\r\n             {\r\n           \r\n        }\r\n                           <BurgerIngredients type=\"bread-top\"/>\r\n            {transformIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n"]},"metadata":{},"sourceType":"module"}