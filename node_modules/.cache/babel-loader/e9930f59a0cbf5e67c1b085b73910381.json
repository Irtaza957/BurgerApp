{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Authentication.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport auth from './authentication/fire';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './authentication/Login';\nimport Layout from './Components/Layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\nimport Checkout from './container/Checkout/Checkout';\nimport Orders from './container/Orders/Orders';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logoutButton = /*#__PURE__*/createContext();\nconst userName = /*#__PURE__*/createContext();\n\nconst Authentication = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n  const [hasAccount, sethasAccount] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n  console.log(user === null || user === void 0 ? void 0 : user.email);\n  const Name = user === null || user === void 0 ? void 0 : user.email;\n\n  const register = async () => {\n    clearErrors();\n    const user = createUserWithEmailAndPassword(auth, email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(\"*Email already in use\");\n\n        case \"auth/invalid-email\":\n          setEmailError(\"*Invalid Email\");\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(\"*Password should be atleast 6 characters\");\n          break;\n      }\n    });\n  };\n\n  const login = () => {\n    clearErrors();\n    const user = signInWithEmailAndPassword(auth, email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/Invalid-email\":\n          setEmailError(\"*Invalid Email\");\n\n        case \"auth/user-disabled\":\n          setEmailError(\"*User is disabled\");\n\n        case \"auth/user-not-found\":\n          setEmailError(\"*User not found\");\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(\"*Wrong password\");\n          break;\n      }\n    });\n  };\n\n  const logout = () => {\n    signOut(auth);\n    clearErrors();\n    clearInputs();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(logoutButton.Provider, {\n      value: logout,\n      children: /*#__PURE__*/_jsxDEV(userName.Provider, {\n        value: Name,\n        children: user ? /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: BurgerBuilder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/checkout\",\n              component: Checkout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/orders\",\n              component: Orders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          email: email,\n          password: password,\n          setEmail: setEmail,\n          setPassword: setPassword,\n          handleSignup: register,\n          handleLogin: login,\n          emailError: emailError,\n          passwordError: passwordError,\n          hasAccount: hasAccount,\n          setHasAccount: sethasAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authentication, \"YJTVqFv46lux1CniEvKaYJ70yDU=\");\n\n_c = Authentication;\nexport default Authentication;\nexport { logoutButton, userName };\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Authentication.js"],"names":["React","createContext","useEffect","useState","auth","Route","Switch","Login","Layout","BurgerBuilder","Checkout","Orders","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","logoutButton","userName","Authentication","password","setPassword","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","hasAccount","sethasAccount","user","setUser","clearInputs","clearErrors","currentUser","console","log","Name","register","catch","err","code","login","logout"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport auth from './authentication/fire';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './authentication/Login';\r\nimport Layout from './Components/Layout/Layout';\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './container/Checkout/Checkout';\r\nimport Orders from './container/Orders/Orders';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n  } from \"firebase/auth\"\r\n  const logoutButton=createContext()\r\n  const userName=createContext()\r\nconst Authentication = () => {\r\n    const [password,setPassword]=useState(\"\")\r\n  const [email,setEmail]=useState(\"\")\r\n  const [emailError,setEmailError]=useState()\r\n  const [passwordError,setPasswordError]=useState()\r\n  const [hasAccount,sethasAccount]=useState(false)\r\n  const [user,setUser]=useState(\"\")\r\n\r\n  \r\n  const clearInputs=()=>{\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  }\r\n\r\n  onAuthStateChanged(auth,(currentUser)=>{\r\n    setUser(currentUser)\r\n  })\r\n   console.log(user?.email)\r\n  const Name=user?.email\r\n\r\n  const register=async()=>{\r\n    clearErrors()\r\n    const user=createUserWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    switch(err.code){\r\n      case \"auth/email-already-in-use\":\r\n        setEmailError(\"*Email already in use\")\r\n        case \"auth/invalid-email\":\r\n            setEmailError(\"*Invalid Email\")\r\n            break\r\n            case \"auth/weak-password\":\r\n              setPasswordError(\"*Password should be atleast 6 characters\")\r\n              break\r\n    }\r\n  })\r\n  }\r\n\r\n  const login=()=>{\r\n    clearErrors()\r\n  const user=signInWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    switch(err.code){\r\n      case \"auth/Invalid-email\":\r\n        setEmailError(\"*Invalid Email\")\r\n        case \"auth/user-disabled\":\r\n          setEmailError(\"*User is disabled\")\r\n          case \"auth/user-not-found\":\r\n            setEmailError(\"*User not found\")\r\n            break\r\n            case \"auth/wrong-password\":\r\n              setPasswordError(\"*Wrong password\")\r\n              break\r\n    }\r\n  })\r\n  }\r\n\r\n  const logout=()=>{\r\n     signOut(auth)\r\n     clearErrors()\r\n     clearInputs()\r\n  }\r\n\r\n    return (\r\n        <div>\r\n          <logoutButton.Provider value={logout}>\r\n          <userName.Provider value={Name}>\r\n             {user?(\r\n           <Layout>\r\n           <Switch>\r\n                   <Route path=\"/\" exact component={BurgerBuilder} />\r\n                   <Route path=\"/checkout\"  component={Checkout} />\r\n                   <Route path=\"/orders\"  component={Orders}/>\r\n           </Switch>\r\n       </Layout>\r\n      ):(\r\n        <Login\r\n      email={email}\r\n      password={password}\r\n      setEmail={setEmail}\r\n      setPassword={setPassword}\r\n      handleSignup={register}\r\n      handleLogin={login}\r\n      emailError={emailError}\r\n      passwordError={passwordError}\r\n      hasAccount={hasAccount}\r\n      setHasAccount={sethasAccount}\r\n      />\r\n      )}\r\n       </userName.Provider>\r\n      </logoutButton.Provider>\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication\r\nexport {logoutButton , userName}\r\n"]},"metadata":{},"sourceType":"module"}