{"ast":null,"code":"import _objectSpread from\"D:/reactProjects/BurgerBuilder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/reactProjects/BurgerBuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import Auxiliary from'../../hoc/Auxiliary';import{useHistory}from'react-router-dom';import Burger from'../../Components/Layout/Burger/Burger';import BuildControls from'../../Components/Layout/Burger/BuildControls/BuildControls';import Modal from'../../UI/Backdrop/Modal/Modal';import OrderSummary from'../../Components/Layout/Burger/OrderSummary/OrderSummary';import Spinner from'../../UI/Spinner/Spinner';import{setAlertBanner}from'../../Authentication';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BurgerBuilder=function BurgerBuilder(){var setAlert=useContext(setAlertBanner);var _useState=useState({salad:0.5,cheese:0.4,meat:1.3,bacon:0}),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];var _useState3=useState({salad:0,bacon:0,cheese:0,meat:0}),_useState4=_slicedToArray(_useState3,2),ingredient=_useState4[0],setIngredient=_useState4[1];var _useState5=useState(4),_useState6=_slicedToArray(_useState5,2),total=_useState6[0],setTotal=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),purchaseable=_useState8[0],setPurchaseable=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),purchasing=_useState10[0],setPurchasing=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),loading=_useState12[0],setLoading=_useState12[1];function purchaseHandler(){setPurchasing(true);setAlert(false);}function cancelPurchaseHandler(){setPurchasing(false);}var history=useHistory();//for checkout burger ingredients  (link)\nvar queryParams=[];for(var i in ingredient){queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(ingredient[i]));// encodeURIComponent(i) => salad etc\n//encodeURIComponent(ingredient[i]) 1,2 etc\n// console.log(encodeURIComponent(ingredient[i]))\n}queryParams.push('price='+total);//to add \"&\" among arrays\nvar queryString=queryParams.join('&');//continue button\nfunction PurchaseContinueHandler(){history.push({pathname:'/checkout',search:'?'+queryString});}//to enable ORDER button if ingredeint is added \nfunction updatePurchaseState(ingredients){var sum=Object.keys(ingredients).map(function(igKey){return ingredients[igKey];//ingredients[igKey] is values of ingredients\n}).reduce(function(sum,el){return sum+el;},0);if(sum>0){setPurchaseable(true);}}function addIngredientHandler(type){//increasing/decreasing burger ingredients on clicking more/less\nvar oldCount=ingredient[type];// console.log(oldCount)\nvar updatedCount=oldCount+1;var updatedIngredients=_objectSpread({},ingredient);updatedIngredients[type]=updatedCount;var priceAddition=price[type];var oldPrice=total;var newPrice=oldPrice+priceAddition;setTotal(newPrice);setIngredient(updatedIngredients);updatePurchaseState(updatedIngredients);}function removeIngredientHandler(type){var oldCount=ingredient[type];//to avoid error if length of array is negative\nif(oldCount<=0){return null;}var updatedCount=oldCount-1;var updatedIngredients=_objectSpread({},ingredient);updatedIngredients[type]=updatedCount;var priceAddition=price[type];var oldPrice=total;var newPrice=oldPrice-priceAddition;setTotal(newPrice);setIngredient(updatedIngredients);}var disabledInfo=_objectSpread({},ingredient);for(var key in disabledInfo){//disabledInfo[key] is value of ingredients \ndisabledInfo[key]=disabledInfo[key]<=0;}//disabledInfo = {salad:true, meat: false, ....}. if ingredient's value is false then it will be disabled\nvar orderSummary=/*#__PURE__*/_jsx(OrderSummary,{ingredients:ingredient,purchaseCancelled:cancelPurchaseHandler,purchaseContinued:PurchaseContinueHandler,price:total});if(loading){orderSummary=/*#__PURE__*/_jsx(Spinner,{});}return/*#__PURE__*/_jsxs(Auxiliary,{children:[/*#__PURE__*/_jsx(Modal,{show:purchasing,modalClosed:cancelPurchaseHandler,children:orderSummary}),/*#__PURE__*/_jsx(Burger,{ingredient:ingredient}),/*#__PURE__*/_jsx(BuildControls,{ingredientAdded:addIngredientHandler,ingredientRemoved:removeIngredientHandler,disabled:disabledInfo,price:total,purchase:purchaseable,ordered:purchaseHandler})]});};export default BurgerBuilder;","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/container/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useContext","Auxiliary","useHistory","Burger","BuildControls","Modal","OrderSummary","Spinner","setAlertBanner","BurgerBuilder","setAlert","salad","cheese","meat","bacon","price","setPrice","ingredient","setIngredient","total","setTotal","purchaseable","setPurchaseable","purchasing","setPurchasing","loading","setLoading","purchaseHandler","cancelPurchaseHandler","history","queryParams","i","push","encodeURIComponent","queryString","join","PurchaseContinueHandler","pathname","search","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Burger from '../../Components/Layout/Burger/Burger'\r\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../UI/Backdrop/Modal/Modal'\r\nimport OrderSummary from '../../Components/Layout/Burger/OrderSummary/OrderSummary'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\nimport { setAlertBanner } from '../../Authentication'\r\nconst BurgerBuilder = () => {\r\n  const setAlert=useContext(setAlertBanner)\r\n  const [price,setPrice]=useState({\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0\r\n  })\r\n  const [ingredient,setIngredient]=useState({\r\n    salad: 0,\r\n    bacon: 0,\r\n    cheese: 0,\r\n    meat: 0\r\n  })\r\n  \r\n  const [total,setTotal]=useState(4)\r\n  const [purchaseable,setPurchaseable]=useState(false)\r\n  const [purchasing,setPurchasing]=useState(false)\r\nconst [loading,setLoading]=useState(false)\r\n  function purchaseHandler(){\r\nsetPurchasing(true)\r\nsetAlert(false)\r\n  }\r\n\r\n  function cancelPurchaseHandler(){\r\n    setPurchasing(false)\r\n  }\r\n\r\nconst history=useHistory()\r\n//for checkout burger ingredients  (link)\r\nconst queryParams=[];\r\nfor(let i in ingredient){\r\n \r\n  queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(ingredient[i]))\r\n  // encodeURIComponent(i) => salad etc\r\n  //encodeURIComponent(ingredient[i]) 1,2 etc\r\n  // console.log(encodeURIComponent(ingredient[i]))\r\n}\r\nqueryParams.push('price=' + total)\r\n//to add \"&\" among arrays\r\nconst queryString=queryParams.join('&')\r\n//continue button\r\n  function PurchaseContinueHandler(){\r\n    history.push({\r\n      pathname:'/checkout',\r\n      search: '?' + queryString\r\n    })\r\n  }\r\n//to enable ORDER button if ingredeint is added \r\n function updatePurchaseState(ingredients){\r\nconst sum=Object.keys(ingredients)\r\n.map(igKey=>{\r\n  return ingredients[igKey]\r\n  //ingredients[igKey] is values of ingredients\r\n})\r\n.reduce((sum,el)=>{\r\n  return sum + el\r\n},0)\r\n\r\nif(sum>0){\r\n  setPurchaseable(true)\r\n}\r\n  }\r\n function addIngredientHandler(type){\r\n//increasing/decreasing burger ingredients on clicking more/less\r\nconst oldCount=ingredient[type]\r\n// console.log(oldCount)\r\nconst updatedCount=oldCount+1\r\n const updatedIngredients={\r\n   ...ingredient\r\n }\r\n updatedIngredients[type]=updatedCount\r\n const priceAddition=price[type]\r\n const oldPrice=total\r\n const newPrice=oldPrice+priceAddition\r\n setTotal(newPrice)\r\n setIngredient(updatedIngredients)\r\n updatePurchaseState(updatedIngredients)\r\n  }\r\nfunction removeIngredientHandler(type){\r\n  const oldCount=ingredient[type]\r\n  //to avoid error if length of array is negative\r\n  if(oldCount<=0){\r\n    return null\r\n  }\r\n  const updatedCount=oldCount-1\r\n   const updatedIngredients={\r\n     ...ingredient\r\n   }\r\n   updatedIngredients[type]=updatedCount\r\n   const priceAddition=price[type]\r\n   const oldPrice=total\r\n   const newPrice=oldPrice-priceAddition\r\n   setTotal(newPrice)\r\n   setIngredient(updatedIngredients)\r\n \r\n}\r\nconst disabledInfo={\r\n  ...ingredient\r\n}\r\n\r\nfor(let key in disabledInfo){\r\n  //disabledInfo[key] is value of ingredients \r\n disabledInfo[key]=disabledInfo[key]<=0\r\n}\r\n//disabledInfo = {salad:true, meat: false, ....}. if ingredient's value is false then it will be disabled\r\nlet orderSummary=  <OrderSummary \r\ningredients={ingredient}\r\npurchaseCancelled={cancelPurchaseHandler}\r\npurchaseContinued={PurchaseContinueHandler}\r\nprice={total}\r\n/>\r\nif(loading){\r\n  orderSummary=<Spinner/>\r\n}\r\n    return (\r\n        <Auxiliary>\r\n          <Modal \r\n          show={purchasing}\r\n          modalClosed={cancelPurchaseHandler}\r\n          >\r\n          {orderSummary}\r\n          </Modal>\r\n          <Burger ingredient={ingredient}/>\r\n<BuildControls \r\ningredientAdded={addIngredientHandler}\r\ningredientRemoved={removeIngredientHandler}\r\ndisabled={disabledInfo}\r\nprice={total}\r\npurchase={purchaseable}\r\nordered={purchaseHandler }\r\n/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default BurgerBuilder\r\n"]},"metadata":{},"sourceType":"module"}