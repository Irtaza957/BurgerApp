{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Components\\\\Layout\\\\Burger\\\\Order\\\\CheckoutSummary\\\\Order.js\";\nimport React, { useState } from 'react';\nimport './Order.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = props => {\n  console.log(props.length); //way to convert object into an array\n\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textTransform: 'capitalize',\n        display: 'inline-block',\n        margin: '0 8px',\n        border: '1px solid #ccc',\n        padding: '5px'\n      },\n      children: [ig.name, \" \", ig.amount]\n    }, ig.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  });\n\n  const Cancel = id => {\n    console.log(id);\n  };\n\n  let order = null;\n\n  if (props.length) {\n    order = true;\n  } else {\n    order = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Order\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ingredients:\", ingredientOutput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: Number.parseFloat(props.price).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Components/Layout/Burger/Order/CheckoutSummary/Order.js"],"names":["React","useState","Order","props","console","log","length","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","textTransform","display","margin","border","padding","Cancel","id","order","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,EADyB,CAEnB;;AACE,QAAMC,WAAW,GAAC,EAAlB;;AACJ,OAAI,IAAIC,cAAR,IAA0BL,KAAK,CAACI,WAAhC,EAA4C;AACxCA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACdC,MAAAA,IAAI,EAAEF,cADQ;AAEdG,MAAAA,MAAM,EAAER,KAAK,CAACI,WAAN,CAAkBC,cAAlB;AAFM,KAAjB;AAIH;;AAED,QAAMI,gBAAgB,GAACL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAE;AACvC,wBAAQ;AACR,MAAA,KAAK,EAAE;AACHC,QAAAA,aAAa,EAAE,YADZ;AAEHC,QAAAA,OAAO,EAAE,cAFN;AAGHC,QAAAA,MAAM,EAAE,OAHL;AAIHC,QAAAA,MAAM,EAAE,gBAJL;AAKHC,QAAAA,OAAO,EAAC;AALL,OADC;AAAA,iBAQOL,EAAE,CAACJ,IARV,OAQiBI,EAAE,CAACH,MARpB;AAAA,OAQHG,EAAE,CAACJ,IARA;AAAA;AAAA;AAAA;AAAA,YAAR;AASH,GAVsB,CAAvB;;AAWJ,QAAMU,MAAM,GAAEC,EAAD,IAAM;AACfjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,EAAZ;AACH,GAFD;;AAGA,MAAIC,KAAK,GAAC,IAAV;;AACA,MAAGnB,KAAK,CAACG,MAAT,EAAgB;AACZgB,IAAAA,KAAK,GAAC,IAAN;AACH,GAFD,MAGI;AACAA,IAAAA,KAAK,GAAC,KAAN;AACH;;AACG,sBACI;AAAA,2BAEO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACA;AAAA,mCACSV,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,2CAAU;AAAA,oBAASW,MAAM,CAACC,UAAP,CAAkBrB,KAAK,CAACsB,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFP,mBADJ;AAYH,CA5CD;;KAAMxB,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './Order.css'\r\nconst Order = (props) => {\r\nconsole.log(props.length)\r\n      //way to convert object into an array\r\n        const ingredients=[]\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n           name: ingredientName,\r\n           amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    \r\n    const ingredientOutput=ingredients.map(ig=>{\r\n        return  <span \r\n        style={{\r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border :'1px solid #ccc',\r\n            padding:'5px'\r\n        }}\r\n        key={ig.name}>{ig.name} {ig.amount}</span>  \r\n    })\r\nconst Cancel=(id)=>{\r\n    console.log(id)\r\n}\r\nlet order=null\r\nif(props.length){\r\n    order=true\r\n}\r\nelse{\r\n    order=false   \r\n}\r\n    return (\r\n        <>\r\n        \r\n               <div className=\"Order\">\r\n               <p>Ingredients:\r\n                       {ingredientOutput}   \r\n                    </p>\r\n               <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n           </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order\r\n"]},"metadata":{},"sourceType":"module"}