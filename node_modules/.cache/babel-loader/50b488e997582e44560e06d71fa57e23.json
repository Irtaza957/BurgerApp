{"ast":null,"code":"import _objectSpread from\"D:/reactProjects/BurgerBuilder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/reactProjects/BurgerBuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Order from'../../Components/Layout/Burger/Order/CheckoutSummary/Order';import axios from'../../axios-orders';import Spinner from'../../UI/Spinner/Spinner';import'./Orders.css';import{NavLink}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Orders=function Orders(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),orders=_useState2[0],setOrders=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){axios.get('/orders.json').then(function(res){setLoading(false);var fetchOrders=[];for(var key in res.data){fetchOrders.push(_objectSpread(_objectSpread({},res.data[key]),{},{id:key}));}setOrders(fetchOrders);}).catch(function(err){setLoading(false);});},[]);// console.log(orders)\nvar order=null;var orderLength=null;if(orders.length){orderLength=order=orders.map(function(order){return/*#__PURE__*/_jsx(Order,{length:orders.length,ingredients:order.ingredient,price:order.price},order.id);});}else{orderLength=/*#__PURE__*/_jsxs(\"div\",{className:\"NoOrder\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"No order yet\"}),/*#__PURE__*/_jsx(NavLink,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{className:\"NoOrderButton\",children:\"Order Now\"})})]});}if(loading){order=/*#__PURE__*/_jsx(Spinner,{});}else{order=orderLength;}return/*#__PURE__*/_jsx(\"div\",{children:order});};export default Orders;","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/container/Orders/Orders.js"],"names":["React","useEffect","useState","Order","axios","Spinner","NavLink","Orders","orders","setOrders","loading","setLoading","get","then","res","fetchOrders","key","data","push","id","catch","err","order","orderLength","length","map","ingredient","price"],"mappings":"iOAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,4DAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAO,cAAP,CACA,OAASC,OAAT,KAAwB,kBAAxB,C,wFACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,cAAyBL,QAAQ,CAAC,EAAD,CAAjC,wCAAOM,MAAP,eAAcC,SAAd,eACA,eAA2BP,QAAQ,CAAC,IAAD,CAAnC,yCAAOQ,OAAP,eAAeC,UAAf,eAEAV,SAAS,CAAC,UAAI,CACVG,KAAK,CAACQ,GAAN,CAAU,cAAV,EACCC,IADD,CACM,SAAAC,GAAG,CAAE,CACPH,UAAU,CAAC,KAAD,CAAV,CACA,GAAMI,CAAAA,WAAW,CAAC,EAAlB,CACA,IAAI,GAAIC,CAAAA,GAAR,GAAeF,CAAAA,GAAG,CAACG,IAAnB,CAAwB,CACpBF,WAAW,CAACG,IAAZ,gCACOJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADP,MAEIG,EAAE,CAAEH,GAFR,IAIH,CACbP,SAAS,CAACM,WAAD,CAAT,CACS,CAXD,EAYCK,KAZD,CAYO,SAAAC,GAAG,CAAE,CACRV,UAAU,CAAC,KAAD,CAAV,CACH,CAdD,EAeH,CAhBQ,CAgBP,EAhBO,CAAT,CAiBJ;AACI,GAAIW,CAAAA,KAAK,CAAE,IAAX,CACA,GAAIC,CAAAA,WAAW,CAAC,IAAhB,CACA,GAAGf,MAAM,CAACgB,MAAV,CAAiB,CACdD,WAAW,CACVD,KAAK,CAACd,MAAM,CAACiB,GAAP,CAAW,SAAAH,KAAK,qBAClB,KAAC,KAAD,EACA,MAAM,CAAEd,MAAM,CAACgB,MADf,CAGA,WAAW,CAAEF,KAAK,CAACI,UAHnB,CAIA,KAAK,CAAEJ,KAAK,CAACK,KAJb,EAEKL,KAAK,CAACH,EAFX,CADkB,EAAhB,CADP,CAUF,CAXD,IAYI,CACAI,WAAW,cACX,aAAK,SAAS,CAAC,SAAf,wBACA,qCADA,cAED,KAAC,OAAD,EAAS,EAAE,CAAC,GAAZ,uBAAgB,eAAQ,SAAS,CAAC,eAAlB,uBAAhB,EAFC,GADA,CAMH,CAEG,GAAGb,OAAH,CAAW,CACPY,KAAK,cAAE,KAAC,OAAD,IAAP,CACF,CAFF,IAGK,CACJA,KAAK,CAACC,WAAN,CACC,CACN,mBACI,qBACCD,KADD,EADJ,CAKH,CAxDD,CA0DA,cAAef,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Order from '../../Components/Layout/Burger/Order/CheckoutSummary/Order'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\nimport './Orders.css'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Orders = () => {\r\n    const [orders,setOrders]=useState([])\r\n    const [loading,setLoading]=useState(true)\r\n   \r\n    useEffect(()=>{\r\n        axios.get('/orders.json')\r\n        .then(res=>{\r\n            setLoading(false)\r\n            const fetchOrders=[]\r\n            for(let key in res.data){\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                })\r\n            }  \r\nsetOrders(fetchOrders)\r\n        })\r\n        .catch(err=>{\r\n            setLoading(false)\r\n        })\r\n    },[])\r\n// console.log(orders)\r\n    let order= null\r\n    let orderLength=null\r\n    if(orders.length){\r\n       orderLength=(\r\n        order=orders.map(order=>(\r\n            <Order \r\n            length={orders.length}\r\n            key={order.id}\r\n            ingredients={order.ingredient}\r\n            price={order.price}\r\n            />)\r\n            )\r\n       )\r\n    }\r\n    else{\r\n        orderLength=(\r\n        <div className='NoOrder'>\r\n        <div>No order yet</div>\r\n       <NavLink to='/'><button className='NoOrderButton'>Order Now</button></NavLink> \r\n        </div>\r\n        )\r\n    }\r\n\r\n        if(loading){\r\n            order= <Spinner/>\r\n         }\r\n         else{\r\n         order=orderLength\r\n         }\r\n    return (\r\n        <div>  \r\n        {order}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n"]},"metadata":{},"sourceType":"module"}