{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactcourse\\\\src\\\\container\\\\BurgerBuilder\\\\BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Auxiliary from '../../hoc/Auxiliary';\nimport Burger from '../../Components/Layout/Burger/Burger';\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BurgerBuilder = () => {\n  _s();\n\n  const [price, setPrice] = useState({\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0\n  });\n  const [ingredient, setIngredient] = useState({\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  });\n  const [total, setTotal] = useState(4);\n\n  function addIngredientHandler(type) {\n    const oldCount = ingredient[type];\n    const updatedCounted = oldCount + 1;\n    const updatedIngredients = { ...ingredient\n    };\n    console.log(updatedIngredients);\n  } // removeIngredientHandler=(type)=>{\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Auxiliary, {\n    children: [/*#__PURE__*/_jsxDEV(Burger, {\n      ingredient: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n      add: addIngredientHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BurgerBuilder, \"3aUB6TPJY4m82f6PIh0WWDBnjUI=\");\n\n_c = BurgerBuilder;\nexport default BurgerBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerBuilder\");","map":{"version":3,"sources":["D:/react/reactcourse/src/container/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","Auxiliary","Burger","BuildControls","BurgerBuilder","price","setPrice","salad","cheese","meat","bacon","ingredient","setIngredient","total","setTotal","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC;AAC9BO,IAAAA,KAAK,EAAE,GADuB;AAE9BC,IAAAA,MAAM,EAAE,GAFsB;AAG9BC,IAAAA,IAAI,EAAE,GAHwB;AAI9BC,IAAAA,KAAK,EAAE;AAJuB,GAAD,CAA/B;AAMA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BZ,QAAQ,CAAC;AACxCO,IAAAA,KAAK,EAAE,CADiC;AAExCG,IAAAA,KAAK,EAAE,CAFiC;AAGxCF,IAAAA,MAAM,EAAE,CAHgC;AAIxCC,IAAAA,IAAI,EAAE;AAJkC,GAAD,CAAzC;AAMA,QAAM,CAACI,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,CAAD,CAA/B;;AACD,WAASe,oBAAT,CAA8BC,IAA9B,EAAmC;AACpC,UAAMC,QAAQ,GAACN,UAAU,CAACK,IAAD,CAAzB;AACA,UAAME,cAAc,GAACD,QAAQ,GAAC,CAA9B;AACC,UAAME,kBAAkB,GAAC,EACvB,GAAGR;AADoB,KAAzB;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ;AACE,GArByB,CAsB1B;AAEA;;;AACE,sBACI,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAER;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAER,QAAC,aAAD;AAAe,MAAA,GAAG,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/BD;;GAAMX,a;;KAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Burger from '../../Components/Layout/Burger/Burger'\r\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls'\r\nconst BurgerBuilder = () => {\r\n  const [price,setPrice]=useState({\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0\r\n  })\r\n  const [ingredient,setIngredient]=useState({\r\n    salad: 0,\r\n    bacon: 0,\r\n    cheese: 0,\r\n    meat: 0\r\n  })\r\n  const [total,setTotal]=useState(4)\r\n function addIngredientHandler(type){\r\nconst oldCount=ingredient[type]\r\nconst updatedCounted=oldCount+1\r\n const updatedIngredients={\r\n   ...ingredient\r\n }\r\n console.log(updatedIngredients)\r\n  }\r\n  // removeIngredientHandler=(type)=>{\r\n\r\n  // }\r\n    return (\r\n        <Auxiliary>\r\n          <Burger ingredient={ingredient}/>\r\n<BuildControls add={addIngredientHandler}/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default BurgerBuilder\r\n"]},"metadata":{},"sourceType":"module"}