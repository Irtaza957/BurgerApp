{"ast":null,"code":"import _toConsumableArray from\"I:/BurgerBuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import'./Burger.css';import BurgerIngredients from'./BurgerIngredients/BurgerIngredients';import{alertBanner,setAlertBanner}from'../../../Authentication';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Burger=function Burger(props){//transformation codes\n// that is used to convert object(ingredients) into an array\n//\"keys\" returns array of ingredients\nvar transformIngredients=Object.keys(props.ingredient)//\"igKey\" is argument that represents keys like 'salad','cheese'\n.map(function(igKey){//creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\n// If ingredients is used 2 or more than 2 times, then create array for that ingredient\nreturn _toConsumableArray(Array(props.ingredient[igKey])).map(function(_,i){//\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\nreturn/*#__PURE__*/_jsx(BurgerIngredients,{type:igKey},igKey+i);});})//reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\n.reduce(function(arr,el){//  console.log(el)\nreturn arr.concat(el);},[]);if(transformIngredients.length===0){transformIngredients=/*#__PURE__*/_jsx(\"p\",{className:\"BurgerText\",children:\"Please start adding ingredients!\"});}var alert=useContext(alertBanner);var setAlert=useContext(setAlertBanner);var alertClose=function alertClose(){setAlert(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Burger\",children:[alert?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning alert-dismissible fade show\",role:\"alert\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Congratulation!\"}),\" Your order placed successfully\"]}),/*#__PURE__*/_jsx(\"div\",{onClick:alertClose,className:\"closeButton\",children:\"X\"})]})}):null,/*#__PURE__*/_jsx(BurgerIngredients,{type:\"bread-top\"}),transformIngredients,/*#__PURE__*/_jsx(BurgerIngredients,{type:\"bread-bottom\"})]});};export default Burger;","map":{"version":3,"sources":["I:/BurgerBuilder/src/Components/Layout/Burger/Burger.js"],"names":["React","useContext","BurgerIngredients","alertBanner","setAlertBanner","Burger","props","transformIngredients","Object","keys","ingredient","map","igKey","Array","_","i","reduce","arr","el","concat","length","alert","setAlert","alertClose"],"mappings":"2GAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,CACA,OAASC,WAAT,CAAqBC,cAArB,KAA2C,yBAA3C,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtB;AACD;AACA;AACC,GAAIC,CAAAA,oBAAoB,CAACC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,UAAlB,CACzB;AADyB,CAExBC,GAFwB,CAEpB,SAAAC,KAAK,CAAE,CACR;AACA;AACA,MAAO,oBAAIC,KAAK,CAACP,KAAK,CAACI,UAAN,CAAiBE,KAAjB,CAAD,CAAT,EAAoCD,GAApC,CAAwC,SAACG,CAAD,CAAGC,CAAH,CAAO,CAClD;AACA,mBAAO,KAAC,iBAAD,EAAmC,IAAI,CAAEH,KAAzC,EAAwBA,KAAK,CAAGG,CAAhC,CAAP,CACH,CAHM,CAAP,CAIH,CATwB,CAUzB;AAVyB,CAWxBC,MAXwB,CAWjB,SAACC,GAAD,CAAKC,EAAL,CAAU,CACd;AACA,MAAOD,CAAAA,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP,CACH,CAdwB,CAcvB,EAduB,CAAzB,CAeA,GAAGX,oBAAoB,CAACa,MAArB,GAA8B,CAAjC,CAAmC,CAC/Bb,oBAAoB,cAAC,UAAG,SAAS,CAAC,YAAb,8CAArB,CACH,CACD,GAAMc,CAAAA,KAAK,CAACpB,UAAU,CAACE,WAAD,CAAtB,CACA,GAAMmB,CAAAA,QAAQ,CAACrB,UAAU,CAACG,cAAD,CAAzB,CACA,GAAMmB,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,EAAI,CACjBD,QAAQ,CAAC,KAAD,CAAR,CACH,CAFD,CAIA,mBAEI,aAAK,SAAS,CAAC,QAAf,WAEGD,KAAK,cACA,sCAChB,aAAK,SAAS,CAAC,iDAAf,CAAiE,IAAI,CAAC,OAAtE,wBACA,oCAAK,2CAAL,qCADA,cAEA,YAAK,OAAO,CAAEE,UAAd,CAA0B,SAAS,CAAC,aAApC,eAFA,GADgB,EADA,CAOF,IATN,cAWI,KAAC,iBAAD,EAAmB,IAAI,CAAC,WAAxB,EAXJ,CAYKhB,oBAZL,cAaI,KAAC,iBAAD,EAAmB,IAAI,CAAC,cAAxB,EAbJ,GAFJ,CAkBH,CA9CD,CAgDA,cAAeF,CAAAA,MAAf","sourcesContent":["import React,{ useContext} from 'react'\r\nimport './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport { alertBanner,setAlertBanner } from '../../../Authentication'\r\n\r\nconst Burger = (props) => {\r\n    //transformation codes\r\n   // that is used to convert object(ingredients) into an array\r\n   //\"keys\" returns array of ingredients\r\n    let transformIngredients=Object.keys(props.ingredient)\r\n    //\"igKey\" is argument that represents keys like 'salad','cheese'\r\n    .map(igKey=>{\r\n        //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\r\n        // If ingredients is used 2 or more than 2 times, then create array for that ingredient\r\n        return [...Array(props.ingredient[igKey])].map((_,i)=>{\r\n            //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\r\n            return <BurgerIngredients key={igKey + i} type={igKey}/>\r\n        })\r\n    })\r\n    //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\r\n    .reduce((arr,el)=>{\r\n        //  console.log(el)\r\n        return arr.concat(el)\r\n    },[])\r\n    if(transformIngredients.length===0){\r\n        transformIngredients=<p className='BurgerText'>Please start adding ingredients!</p>\r\n    }\r\n    const alert=useContext(alertBanner)\r\n    const setAlert=useContext(setAlertBanner)\r\n    const alertClose=()=>{\r\n        setAlert(false)\r\n    }\r\n  \r\n    return (\r\n       \r\n        <div className=\"Burger\">\r\n            \r\n         { alert?(\r\n                <>\r\n<div className='alert alert-warning alert-dismissible fade show' role=\"alert\">\r\n<div><strong>Congratulation!</strong> Your order placed successfully</div>\r\n<div onClick={alertClose} className=\"closeButton\" >X</div>\r\n</div>\r\n</>\r\n            ):null\r\n        }\r\n            <BurgerIngredients type=\"bread-top\"/>\r\n            {transformIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n"]},"metadata":{},"sourceType":"module"}