{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\Authentication.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport auth from './authentication/fire';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './authentication/Login';\nimport Layout from './Components/Layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\nimport Checkout from './container/Checkout/Checkout';\nimport Orders from './container/Orders/Orders';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logoutButton = /*#__PURE__*/createContext();\nconst userName = /*#__PURE__*/createContext();\nconst alertBanner = /*#__PURE__*/createContext();\n\nconst Authentication = () => {\n  _s();\n\n  let alert = false;\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n  const [hasAccount, sethasAccount] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n  const Name = user === null || user === void 0 ? void 0 : user.email;\n\n  const register = async () => {\n    clearErrors();\n    const user = createUserWithEmailAndPassword(auth, email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(\"*Email already in use\");\n\n        case \"auth/invalid-email\":\n          setEmailError(\"*Invalid Email\");\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(\"*Password should be atleast 6 characters\");\n          break;\n      }\n    });\n  };\n\n  const login = () => {\n    clearErrors();\n    const user = signInWithEmailAndPassword(auth, email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/Invalid-email\":\n          setEmailError(\"*Invalid Email\");\n\n        case \"auth/user-disabled\":\n          setEmailError(\"*User is disabled\");\n\n        case \"auth/user-not-found\":\n          setEmailError(\"*User not found\");\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(\"*Wrong password\");\n          break;\n      }\n    });\n  };\n\n  const logout = () => {\n    signOut(auth);\n    clearErrors();\n    clearInputs();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(logoutButton.Provider, {\n      value: logout,\n      children: /*#__PURE__*/_jsxDEV(userName.Provider, {\n        value: Name,\n        children: /*#__PURE__*/_jsxDEV(alertBanner.Provider, {\n          value: alert,\n          children: user ? /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                component: BurgerBuilder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/checkout\",\n                component: Checkout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/orders\",\n                component: Orders\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 12\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            email: email,\n            password: password,\n            setEmail: setEmail,\n            setPassword: setPassword,\n            handleSignup: register,\n            handleLogin: login,\n            emailError: emailError,\n            passwordError: passwordError,\n            hasAccount: hasAccount,\n            setHasAccount: sethasAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authentication, \"YJTVqFv46lux1CniEvKaYJ70yDU=\");\n\n_c = Authentication;\nexport default Authentication;\nexport { logoutButton, userName, alertBanner };\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/Authentication.js"],"names":["React","createContext","useEffect","useState","auth","Route","Switch","Login","Layout","BurgerBuilder","Checkout","Orders","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","logoutButton","userName","alertBanner","Authentication","alert","password","setPassword","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","hasAccount","sethasAccount","user","setUser","clearInputs","clearErrors","currentUser","Name","register","catch","err","code","login","logout"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport auth from './authentication/fire';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './authentication/Login';\r\nimport Layout from './Components/Layout/Layout';\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './container/Checkout/Checkout';\r\nimport Orders from './container/Orders/Orders';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n  } from \"firebase/auth\"\r\n  const logoutButton=createContext()\r\n  const userName=createContext()\r\n  const alertBanner=createContext()\r\n\r\nconst Authentication = () => {\r\n  let alert=false\r\n    const [password,setPassword]=useState(\"\")\r\n  const [email,setEmail]=useState(\"\")\r\n  const [emailError,setEmailError]=useState()\r\n  const [passwordError,setPasswordError]=useState()\r\n  const [hasAccount,sethasAccount]=useState(false)\r\n  const [user,setUser]=useState(\"\")\r\n\r\n  \r\n  const clearInputs=()=>{\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  }\r\n\r\n  onAuthStateChanged(auth,(currentUser)=>{\r\n    setUser(currentUser)\r\n  })\r\n  const Name=user?.email\r\n\r\n  const register=async()=>{\r\n    clearErrors()\r\n    const user=createUserWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    switch(err.code){\r\n      case \"auth/email-already-in-use\":\r\n        setEmailError(\"*Email already in use\")\r\n        case \"auth/invalid-email\":\r\n            setEmailError(\"*Invalid Email\")\r\n            break\r\n            case \"auth/weak-password\":\r\n              setPasswordError(\"*Password should be atleast 6 characters\")\r\n              break\r\n    }\r\n  })\r\n  }\r\n\r\n  const login=()=>{\r\n    clearErrors()\r\n  const user=signInWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    switch(err.code){\r\n      case \"auth/Invalid-email\":\r\n        setEmailError(\"*Invalid Email\")\r\n        case \"auth/user-disabled\":\r\n          setEmailError(\"*User is disabled\")\r\n          case \"auth/user-not-found\":\r\n            setEmailError(\"*User not found\")\r\n            break\r\n            case \"auth/wrong-password\":\r\n              setPasswordError(\"*Wrong password\")\r\n              break\r\n    }\r\n  })\r\n  }\r\n\r\n  const logout=()=>{\r\n     signOut(auth)\r\n     clearErrors()\r\n     clearInputs()\r\n  }\r\n\r\n    return (\r\n        <div>\r\n          <logoutButton.Provider value={logout}>\r\n          <userName.Provider value={Name}>\r\n              <alertBanner.Provider value={alert}>\r\n             {user?(\r\n           <Layout>\r\n           <Switch>\r\n                   <Route path=\"/\" exact component={BurgerBuilder} />\r\n                   <Route path=\"/checkout\"  component={Checkout} />\r\n                   <Route path=\"/orders\"  component={Orders}/>\r\n           </Switch>\r\n       </Layout>\r\n      ):(\r\n        <Login\r\n      email={email}\r\n      password={password}\r\n      setEmail={setEmail}\r\n      setPassword={setPassword}\r\n      handleSignup={register}\r\n      handleLogin={login}\r\n      emailError={emailError}\r\n      passwordError={passwordError}\r\n      hasAccount={hasAccount}\r\n      setHasAccount={sethasAccount}\r\n      />\r\n      )}\r\n      </alertBanner.Provider>\r\n    \r\n       </userName.Provider>\r\n      </logoutButton.Provider>\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication\r\nexport {logoutButton , userName, alertBanner}\r\n"]},"metadata":{},"sourceType":"module"}