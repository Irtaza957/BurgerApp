{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactcourse\\\\src\\\\container\\\\Checkout\\\\ContactData\\\\ContactData.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ContactData.css';\nimport Button from '../../../UI/Button/Button';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport { func } from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactData = props => {\n  _s2();\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    address: '',\n    street: '',\n    postalCode: ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  function OrderHandler(event) {\n    var _s = $RefreshSig$();\n\n    event.preventDefault();\n    setLoading(true);\n    const order = {\n      ingredient: props.ingredients,\n      price: props.price,\n      customer: {\n        name: \"Irtaza\",\n        address: {\n          city: \"Gujranwala\",\n          zipCode: \"41351\",\n          country: \"Pakistan\"\n        },\n        email: \"irtaza010@gmail.com\"\n      },\n      deliveryMethod: 'fastest'\n    };\n    axios.post('/orders.json', order).then(_s(response => {\n      _s();\n\n      setLoading(false);\n      const history = useHistory();\n      history.push('/');\n    }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n      return [useHistory];\n    })).catch(error => {\n      setLoading(false);\n    });\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input\",\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street No.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input\",\n      type: \"text\",\n      name: \"postal\",\n      placeholder: \"Postal Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: OrderHandler,\n        className: \"Button Success\",\n        children: \" Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n\n  if (loading) {\n    form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactData\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Enter your Contact Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }, this), form]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ContactData, \"w/kZ2m+pC0htPmbxPvnvL49MCs0=\");\n\n_c = ContactData;\nexport default ContactData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactData\");","map":{"version":3,"sources":["D:/react/reactcourse/src/container/Checkout/ContactData/ContactData.js"],"names":["React","useState","Button","axios","Spinner","func","useHistory","ContactData","props","contact","setContact","name","email","address","street","postalCode","loading","setLoading","OrderHandler","event","preventDefault","order","ingredient","ingredients","price","customer","city","zipCode","country","deliveryMethod","post","then","response","history","push","catch","error","form"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './ContactData.css'\r\nimport Button from '../../../UI/Button/Button'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../UI/Spinner/Spinner'\r\n\r\nimport { func } from 'prop-types'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst ContactData = (props) => {\r\n    const [contact,setContact]=useState({\r\n        name: '',\r\n        email: '',\r\n        address: '',\r\n        street:'',\r\n        postalCode: ''\r\n    })\r\n    \r\n    const [loading,setLoading]=useState(false)\r\nfunction OrderHandler(event){\r\n        event.preventDefault()\r\n            setLoading(true)\r\n    const order={\r\n      ingredient: props.ingredients,\r\n      price: props.price,\r\n    customer:{\r\nname: \"Irtaza\",\r\naddress:{\r\n city :\"Gujranwala\",\r\nzipCode:\"41351\",\r\ncountry:\"Pakistan\"\r\n    },\r\n    email:\"irtaza010@gmail.com\",\r\n  }, \r\n    deliveryMethod: 'fastest'\r\n  }\r\n  \r\naxios.post('/orders.json',order)\r\n.then(response=>{\r\n  setLoading(false)\r\n  const history=useHistory()\r\nhistory.push('/')\r\n})\r\n.catch(error=>{\r\n  setLoading(false)\r\n\r\n})\r\n    }\r\n    let form=(\r\n         <form>\r\n        <input className=\"Input\" type=\"text\" name=\"name\" placeholder=\"Your Name\"/>\r\n        <input className=\"Input\" type=\"email\" name=\"email\" placeholder=\"Your Email\"/>\r\n        <input className=\"Input\" type=\"text\" name=\"street\" placeholder=\"Street No.\"/>\r\n        <input className=\"Input\" type=\"text\" name=\"postal\" placeholder=\"Postal Code\"/>\r\n        <Button > <span onClick={OrderHandler} className=\"Button Success\"> Order</span></Button>\r\n    </form>\r\n    )\r\n    if(loading){\r\n        form=<Spinner/>\r\n    }\r\n    return (\r\n        <div className=\"ContactData\">\r\n             <h4>Enter your Contact Data</h4>\r\n            {form}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactData\r\n"]},"metadata":{},"sourceType":"module"}