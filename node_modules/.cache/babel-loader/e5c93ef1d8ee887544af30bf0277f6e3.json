{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactcourse\\\\src\\\\container\\\\BurgerBuilder\\\\BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Auxiliary from '../../hoc/Auxiliary';\nimport Burger from '../../Components/Layout/Burger/Burger';\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls';\nimport { func } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BurgerBuilder = () => {\n  _s();\n\n  const [price, setPrice] = useState({\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0\n  });\n  const [ingredient, setIngredient] = useState({\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  });\n  const [total, setTotal] = useState(4);\n\n  function addIngredientHandler(type) {\n    const oldCount = ingredient[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = { ...ingredient\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = price[type];\n    const oldPrice = total;\n    const newPrice = oldPrice + priceAddition;\n    setTotal(newPrice);\n    setIngredient(updatedIngredients);\n    console.log(updatedIngredients);\n  }\n\n  function removeIngredientHandler(type) {\n    const oldCount = ingredient[type];\n\n    if (oldCount <= 0) {\n      return null;\n    }\n\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = { ...ingredient\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = price[type];\n    const oldPrice = total;\n    const newPrice = oldPrice - priceAddition;\n    setTotal(newPrice);\n    setIngredient(updatedIngredients);\n    console.log(updatedIngredients);\n  }\n\n  const disabledInfo = { ...ingredient\n  };\n\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  } //disabledInfo = {salad:true, meat: false, ....}\n\n\n  return /*#__PURE__*/_jsxDEV(Auxiliary, {\n    children: [/*#__PURE__*/_jsxDEV(Burger, {\n      ingredient: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n      ingredientAdded: addIngredientHandler,\n      ingredientRemoved: removeIngredientHandler,\n      disabled: disabledInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BurgerBuilder, \"3aUB6TPJY4m82f6PIh0WWDBnjUI=\");\n\n_c = BurgerBuilder;\nexport default BurgerBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerBuilder\");","map":{"version":3,"sources":["D:/react/reactcourse/src/container/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","Auxiliary","Burger","BuildControls","func","BurgerBuilder","price","setPrice","salad","cheese","meat","bacon","ingredient","setIngredient","total","setTotal","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","console","log","removeIngredientHandler","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Burger from '../../Components/Layout/Burger/Burger'\r\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls'\r\nimport { func } from 'prop-types'\r\nconst BurgerBuilder = () => {\r\n  const [price,setPrice]=useState({\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0\r\n  })\r\n  const [ingredient,setIngredient]=useState({\r\n    salad: 0,\r\n    bacon: 0,\r\n    cheese: 0,\r\n    meat: 0\r\n  })\r\n  const [total,setTotal]=useState(4)\r\n function addIngredientHandler(type){\r\nconst oldCount=ingredient[type]\r\nconst updatedCount=oldCount+1\r\n const updatedIngredients={\r\n   ...ingredient\r\n }\r\n updatedIngredients[type]=updatedCount\r\n const priceAddition=price[type]\r\n const oldPrice=total\r\n const newPrice=oldPrice+priceAddition\r\n setTotal(newPrice)\r\n setIngredient(updatedIngredients)\r\n console.log(updatedIngredients)\r\n  }\r\nfunction removeIngredientHandler(type){\r\n  const oldCount=ingredient[type]\r\n  if(oldCount<=0){\r\n    return null\r\n  }\r\n  const updatedCount=oldCount-1\r\n   const updatedIngredients={\r\n     ...ingredient\r\n   }\r\n   updatedIngredients[type]=updatedCount\r\n   const priceAddition=price[type]\r\n   const oldPrice=total\r\n   const newPrice=oldPrice-priceAddition\r\n   setTotal(newPrice)\r\n   setIngredient(updatedIngredients)\r\n   console.log(updatedIngredients)\r\n}\r\nconst disabledInfo={\r\n  ...ingredient\r\n}\r\nfor(let key in disabledInfo){\r\ndisabledInfo[key]=disabledInfo[key]<=0\r\n}\r\n//disabledInfo = {salad:true, meat: false, ....}\r\n    return (\r\n        <Auxiliary>\r\n          <Burger ingredient={ingredient}/>\r\n<BuildControls \r\ningredientAdded={addIngredientHandler}\r\ningredientRemoved={removeIngredientHandler}\r\ndisabled={disabledInfo}\r\n/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default BurgerBuilder\r\n"]},"metadata":{},"sourceType":"module"}