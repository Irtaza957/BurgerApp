{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProjects\\\\BurgerBuilder\\\\src\\\\authentication\\\\Login.js\";\nimport React from 'react';\nimport AuthSpinner from './AuthSpinner/AuthSpinner';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: props.email,\n          onChange: e => props.setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: props.emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          value: props.password,\n          onChange: e => props.setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: props.passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnContainer\",\n          children: props.hasAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [props.load ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: props.handleLogin,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(AuthSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 85\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => props.setHasAccount(!props.hasAccount),\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [props.load ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: props.handleSignup,\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(AuthSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 85\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => props.setHasAccount(!props.hasAccount),\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/reactProjects/BurgerBuilder/src/authentication/Login.js"],"names":["React","AuthSpinner","Login","props","email","e","setEmail","target","value","emailError","password","setPassword","passwordError","hasAccount","load","handleLogin","setHasAccount","handleSignup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,QAAQ,MAFR;AAGA,UAAA,KAAK,EAAEA,KAAK,CAACC,KAHb;AAIA,UAAA,QAAQ,EAAGC,CAAD,IAAKF,KAAK,CAACG,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB;AAJf;AAAA;AAAA;AAAA;AAAA,gBAFA,eAQA;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,oBAAyBL,KAAK,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,gBARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,eAUA;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,QAAQ,MAFR;AAGA,UAAA,KAAK,EAAEN,KAAK,CAACO,QAHb;AAIA,UAAA,QAAQ,EAAGL,CAAD,IAAKF,KAAK,CAACQ,WAAN,CAAkBN,CAAC,CAACE,MAAF,CAASC,KAA3B;AAJf;AAAA;AAAA;AAAA;AAAA,gBAVA,eAgBA;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,oBAAyBL,KAAK,CAACS;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAhBA,eAiBA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACKT,KAAK,CAACU,UAAN,gBACG;AAAA,uBACAV,KAAK,CAACW,IAAN,gBAAc;AAAQ,cAAA,OAAO,EAAEX,KAAK,CAACY,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAd,gBAAoE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBADpE,eAEA;AAAA,gEAAyB;AAAM,gBAAA,OAAO,EAAE,MAAIZ,KAAK,CAACa,aAAN,CAAoB,CAACb,KAAK,CAACU,UAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,0BADH,gBAMG;AAAA,uBACAV,KAAK,CAACW,IAAN,gBAAa;AAAQ,cAAA,OAAO,EAAEX,KAAK,CAACc,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAb,gBAAoE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBADpE,eAEA;AAAA,0DAAmB;AAAM,gBAAA,OAAO,EAAE,MAAId,KAAK,CAACa,aAAN,CAAoB,CAACb,KAAK,CAACU,UAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,gBAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAuCH,CAxCD;;KAAMX,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport AuthSpinner from './AuthSpinner/AuthSpinner'\r\nimport './login.css'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <>\r\n        <div className='login'>\r\n        <div className='loginContainer'> \r\n        <label>Username</label>\r\n        <input\r\n        type=\"text\"\r\n        required\r\n        value={props.email}\r\n        onChange={(e)=>props.setEmail(e.target.value)}\r\n        />\r\n        <p className='errorMsg'>{props.emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n        type=\"password\"\r\n        required\r\n        value={props.password}\r\n        onChange={(e)=>props.setPassword(e.target.value)}\r\n        />\r\n        <p className='errorMsg'>{props.passwordError}</p>\r\n        <div className=\"btnContainer\">\r\n            {props.hasAccount?(\r\n                <>\r\n               {props.load?(  <button onClick={props.handleLogin}>Sign In</button>):<AuthSpinner/>}\r\n                <p>Don't have an account?<span onClick={()=>props.setHasAccount(!props.hasAccount)}>Sign up</span></p>\r\n                </>\r\n            ):(\r\n                <>\r\n               {props.load?( <button onClick={props.handleSignup}>Sign up</button>):<AuthSpinner/>}\r\n                <p>Have an account?<span onClick={()=>props.setHasAccount(!props.hasAccount)}>Sign in</span></p>\r\n                </>\r\n            )}\r\n        </div> \r\n        </div>\r\n       \r\n        </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}