{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactcourse\\\\src\\\\container\\\\Checkout\\\\ContactData\\\\ContactData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ContactData.css';\nimport Button from '../../../UI/Button/Button';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Input from '../../../UI/Input/Input';\nimport { func } from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactData = props => {\n  _s();\n\n  const history = useHistory();\n  const [contact, setContact] = useState({\n    name: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your Name'\n      },\n      value: ''\n    },\n    street: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Street'\n      },\n      value: ''\n    },\n    ZipCode: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'ZIP Code'\n      },\n      value: ''\n    },\n    country: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Country'\n      },\n      value: ''\n    },\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your E-Mail'\n      },\n      value: ''\n    }\n  });\n  const [loading, setLoading] = useState(false);\n\n  function OrderHandler(event) {\n    event.preventDefault();\n    setLoading(true);\n    const order = {\n      ingredient: props.ingredients,\n      price: props.price\n    };\n    axios.post('/orders.json', order).then(response => {\n      setLoading(false);\n      history.push('/');\n    }).catch(error => {\n      setLoading(false);\n    });\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      inputtype: \"input\",\n      name: \"name\",\n      placeholder: \"Your Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      inputtype: \"input\",\n      name: \"email\",\n      placeholder: \"Your Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      inputtype: \"input\",\n      name: \"street\",\n      placeholder: \"Street No.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      inputtype: \"input\",\n      name: \"postal\",\n      placeholder: \"Postal Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: OrderHandler,\n        className: \"Button Success\",\n        children: \" Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n\n  if (loading) {\n    form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactData\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Enter your Contact Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this), form]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactData, \"bhETquSMmHTZAYKvSui+kw6TU/k=\", false, function () {\n  return [useHistory];\n});\n\n_c = ContactData;\nexport default ContactData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactData\");","map":{"version":3,"sources":["D:/react/reactcourse/src/container/Checkout/ContactData/ContactData.js"],"names":["React","useState","Button","axios","Spinner","Input","func","useHistory","ContactData","props","history","contact","setContact","name","elementType","elementConfig","type","placeholder","value","street","ZipCode","country","email","loading","setLoading","OrderHandler","event","preventDefault","order","ingredient","ingredients","price","post","then","response","push","catch","error","form"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './ContactData.css'\r\nimport Button from '../../../UI/Button/Button'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../UI/Spinner/Spinner'\r\nimport Input from '../../../UI/Input/Input'\r\nimport { func } from 'prop-types'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ContactData = (props) => {\r\n    const history=useHistory()\r\n    const [contact,setContact]=useState({\r\n      name:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Your Name'\r\n        },\r\n        value:''\r\n      },\r\n      street:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Street'\r\n        },\r\n        value:''\r\n      },\r\n      ZipCode:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'ZIP Code'\r\n        },\r\n        value:''\r\n      },\r\n      country:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Country'\r\n        },\r\n        value:''\r\n      },\r\n      email:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Your E-Mail'\r\n        },\r\n        value:''\r\n      },\r\n    })\r\n    \r\n    const [loading,setLoading]=useState(false)\r\nfunction OrderHandler(event){\r\n        event.preventDefault()\r\n            setLoading(true)\r\n    const order={\r\n      ingredient: props.ingredients,\r\n      price: props.price,\r\n   \r\n  }\r\n  \r\naxios.post('/orders.json',order)\r\n.then(response=>{\r\n  setLoading(false)\r\nhistory.push('/')\r\n})\r\n.catch(error=>{\r\n  setLoading(false)\r\n\r\n})\r\n    }\r\n    let form=(\r\n         <form>\r\n        <Input  inputtype=\"input\" name=\"name\" placeholder=\"Your Name\"/>\r\n        <Input  inputtype=\"input\" name=\"email\" placeholder=\"Your Email\"/>\r\n        <Input  inputtype=\"input\" name=\"street\" placeholder=\"Street No.\"/>\r\n        <Input  inputtype=\"input\" name=\"postal\" placeholder=\"Postal Code\"/>\r\n        <Button > <span onClick={OrderHandler} className=\"Button Success\"> Order</span></Button>\r\n    </form>\r\n    )\r\n    if(loading){\r\n        form=<Spinner/>\r\n    }\r\n    return (\r\n        <div className=\"ContactData\">\r\n             <h4>Enter your Contact Data</h4>\r\n            {form}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactData\r\n"]},"metadata":{},"sourceType":"module"}