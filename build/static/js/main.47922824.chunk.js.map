{"version":3,"sources":["authentication/fire.js","authentication/AuthSpinner/AuthSpinner.js","authentication/Login.js","hoc/Auxiliary.js","assets/images/logo.png","Components/Logo/Logo.js","Components/Layout/Navigation/NavigatioItems/Navigationitem/Navigationitem.js","Components/Layout/Navigation/NavigatioItems/BackdropNav.js","Components/Layout/Navigation/NavigatioItems/NavigationItems.js","Components/Sidedrawer/DrawerToggle/DrawerToggle.js","Components/Layout/Navigation/Toolbar/Toolbar.js","UI/Backdrop/Backdrop.js","Components/Sidedrawer/Sidedrawer.js","Components/Layout/Layout.js","Components/Layout/Burger/BurgerIngredients/BurgerIngredients.js","Components/Layout/Burger/Burger.js","Components/Layout/Burger/BuildControls/BuildControl/BuildControl.js","Components/Layout/Burger/BuildControls/BuildControls.js","UI/Backdrop/Modal/Modal.js","Components/Layout/Burger/OrderSummary/OrderSummary.js","UI/Spinner/Spinner.js","container/BurgerBuilder/BurgerBuilder.js","UI/Button/Button.js","Components/Layout/Burger/Order/CheckoutSummary/CheckoutSummary.js","axios-orders.js","UI/Input/Input.js","container/Checkout/ContactData/ContactData.js","container/Checkout/Checkout.js","Components/Layout/Burger/Order/CheckoutSummary/Order.js","container/Orders/Orders.js","Authentication.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","AuthSpinner","className","Login","props","type","required","value","email","onChange","e","setEmail","target","emailError","password","setPassword","passwordError","hasAccount","load","onClick","handleLogin","setHasAccount","handleSignup","aux","children","Logo","src","logo","alt","Navigationitem","to","link","exact","BackdropNav","backdropHide","logoutHide","setBackdropHide","style","width","height","position","zIndex","left","top","backgroundColor","NavigationItems","logout","useContext","logoutButton","name","userName","useState","setbackdropHide","Hide","setHide","class","DrawerToggle","clicked","Toolbar","opened","drawerToggleClicked","Backdrop","show","Sidedrawer","Auxiliary","closed","Layout","hide","sideDrawer","prevState","BurgerIngredients","ingredient","Burger","transformIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","alert","alertBanner","setAlert","setAlertBanner","role","BuildControl","label","removed","disabled","added","BuildControls","control","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchase","ordered","Modal","modalClosed","transform","opacity","OrderSummary","ingredientSummary","ingredients","textTransform","color","purchaseCancelled","purchaseContinued","Spinner","BurgerBuilder","salad","cheese","meat","bacon","setIngredient","total","setTotal","purchaseable","setPurchaseable","purchasing","setPurchasing","loading","cancelPurchaseHandler","history","useHistory","queryParams","push","encodeURIComponent","queryString","join","disabledInfo","key","orderSummary","pathname","search","updatedCount","updatedIngredients","priceAddition","sum","oldCount","Button","CheckoutSummary","backGroundColor","btnType","CheckoutCancelled","CheckoutContinued","instance","axios","create","baseURL","Input","inputElement","inputClass","invalid","shouldValidate","touched","elementType","changed","elementConfig","options","option","displayValue","ContactData","placeholder","validation","valid","street","ZipCode","minLength","maxLength","country","deliveryMethod","contact","setContact","formIsValid","setformIsValid","setLoading","OrderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","response","catch","error","formElementArray","id","config","form","onSubmit","formElement","inputIdentifier","updatedContact","updatedFormElement","rules","isValid","trim","CHeckValidity","formisvalid","InputChanged","Checkout","setIngredients","setPrice","useEffect","query","URLSearchParams","location","entries","param","replace","path","match","render","Order","ingredientName","amount","ingredientOutput","ig","display","margin","border","padding","Number","parseFloat","Orders","orders","setOrders","get","res","fetchOrders","data","err","orderLength","createContext","Authentication","setEmailError","setPasswordError","sethasAccount","user","setUser","setLoad","clearErrors","onAuthStateChanged","currentUser","Name","register","a","createUserWithEmailAndPassword","code","Provider","signOut","component","signInWithEmailAndPassword","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47922824.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAl0I6v3ok7rguJmCygw07LIsQbDVbsolE\",\r\n  authDomain: \"my-burger-app-b263a.firebaseapp.com\",\r\n  databaseURL: \"https://my-burger-app-b263a-default-rtdb.firebaseio.com\",\r\n  projectId: \"my-burger-app-b263a\",\r\n  storageBucket: \"my-burger-app-b263a.appspot.com\",\r\n  messagingSenderId: \"786019548745\",\r\n  appId: \"1:786019548745:web:b863bfdb0ead320a7c4998\",\r\n  measurementId: \"G-GF2ST3NY38\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const app =initializeApp(firebaseConfig);\r\n\r\n   const auth=getAuth(app)\r\n   export default auth","import React from 'react'\r\nimport './AuthSpinner.css'\r\nconst AuthSpinner = () => {\r\n    return (\r\n        <div>\r\n   <div className=\"Authloader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthSpinner\r\n","import React from 'react'\r\nimport AuthSpinner from './AuthSpinner/AuthSpinner'\r\nimport './login.css'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <>\r\n        <div className='login'>\r\n        <div className='loginContainer'> \r\n        <label>Username</label>\r\n        <input\r\n        type=\"text\"\r\n        required\r\n        value={props.email}\r\n        onChange={(e)=>props.setEmail(e.target.value)}\r\n        />\r\n        <p className='errorMsg'>{props.emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n        type=\"password\"\r\n        required\r\n        value={props.password}\r\n        onChange={(e)=>props.setPassword(e.target.value)}\r\n        />\r\n        <p className='errorMsg'>{props.passwordError}</p>\r\n        <div className=\"btnContainer\">\r\n            {props.hasAccount?(\r\n                <>\r\n               {props.load?(  <button onClick={props.handleLogin}>Sign In</button>):<AuthSpinner/>}\r\n                <p>Don't have an account?<span onClick={()=>props.setHasAccount(!props.hasAccount)}>Sign up</span></p>\r\n                </>\r\n            ):(\r\n                <>\r\n               {props.load?( <button onClick={props.handleSignup}>Sign up</button>):<AuthSpinner/>}\r\n                <p>Have an account?<span onClick={()=>props.setHasAccount(!props.hasAccount)}>Sign in</span></p>\r\n                </>\r\n            )}\r\n        </div> \r\n        </div>\r\n       \r\n        </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nconst aux=(props)=>props.children\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/logo.ec69c7f6.png\";","import React from 'react'\r\nimport './Logo.css'\r\nimport logo from '../../assets/images/logo.png'\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className=\"logo\">\r\n           <img src={logo} alt='Logo'></img> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './navigationitem.css'\r\nconst Navigationitem = (props) => {\r\n    return (\r\n        <div > \r\n            <ul>\r\n                <li className=\"Navigationitem\">\r\n                    <NavLink to={props.link} exact >\r\n                    {props.children}\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n  \r\n        </div>\r\n    )\r\n}\r\nexport default Navigationitem\r\n","import React from 'react'\r\n\r\nconst BackdropNav = (props) => {\r\n\r\n     const logoutHide=()=>{\r\n         props.logoutHide(false)\r\n         props.setBackdropHide(false)\r\n     }\r\n    return (\r\n     props.backdropHide?(\r\n        <div  onClick={logoutHide} style={{   width: '100%',\r\n        height: '100%',\r\n        position: 'fixed',\r\n      zIndex:'-2',\r\n        left: '0',\r\n        top:'0',\r\n        backgroundColor: 'transparent'}}>\r\n    \r\n    </div>\r\n     ):null\r\n       \r\n    )\r\n}\r\n\r\nexport default BackdropNav","import React, { useContext, useState } from 'react'\r\nimport './Navigationitems.css'\r\nimport Navigationitem from './Navigationitem/Navigationitem'\r\nimport { logoutButton ,userName } from '../../../../Authentication'\r\nimport BackdropNav from './BackdropNav'\r\nconst NavigationItems = () => {\r\n    const logout=useContext(logoutButton)\r\n    const name=useContext(userName)\r\n    const [backdropHide,setbackdropHide]=useState(false)\r\n    const [Hide,setHide]=useState(false)\r\n    const handlerHide=()=>{\r\n       \r\n        setbackdropHide(true)\r\n        if(Hide){\r\n            setHide(false)\r\n        }\r\n        else{\r\n            setHide(true)\r\n        }   \r\n    }\r\n    const click=\"userName dropdown-toggle\"\r\n    const clicked=\"logoutClick dropdown-toggle\"\r\n    return (\r\n        <div >\r\n             <BackdropNav backdropHide={backdropHide} setBackdropHide={setbackdropHide} logoutHide={setHide}/>\r\n            <ul className=\"Navigationitems\">\r\n         <Navigationitem link=\"/\">Burger Builder</Navigationitem>\r\n         <Navigationitem link=\"/orders\">Orders</Navigationitem>\r\n       <div class=\"dropdown\">\r\n  <button onClick={handlerHide} class={Hide?clicked:click}>\r\n  {name}\r\n  </button>\r\n \r\n  {Hide?<p onClick={logout} className=\"logout\">Logout</p>:null}\r\n</div>\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationItems\r\n","import React from 'react'\r\n\r\nconst DrawerToggle = (props) => {\r\n    return (\r\n        <div>\r\n           <div onClick={props.clicked}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle\r\n","import React from 'react'\r\nimport './Toolbar.css'\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport Logo from '../../../Logo/Logo'\r\nimport NavigationItems from '../NavigatioItems/NavigationItems'\r\nimport DrawerToggle from '../../../Sidedrawer/DrawerToggle/DrawerToggle'\r\nconst Toolbar = (props) => {\r\n  \r\n    return (\r\n        <div>\r\n            <header className=\"Toolbar\">\r\n            <div><Logo/></div>\r\n\r\n           <div className=\"mobile_menu_icon\" onClick={props.opened}> <MenuOpenIcon/></div>\r\n\r\n                <DrawerToggle clicked={props.drawerToggleClicked}/>               \r\n                <div className=\"desktopOnly\">\r\n                <ul>\r\n                  <NavigationItems/>\r\n                </ul>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import React from 'react'\r\nimport './Backdrop.css'\r\nconst Backdrop = (props) => {\r\n    // console.log(props.clicked)\r\n    return (\r\n        props.show ?\r\n        <div onClick={props.clicked} className=\"Backdrop\">\r\n          \r\n        </div>:null\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import React from 'react'\r\nimport Logo from '../Logo/Logo'\r\nimport NavigationItems from '../Layout/Navigation/NavigatioItems/NavigationItems'\r\nimport './Sidedrawer.css'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\"\r\nconst Sidedrawer = (props) => {\r\n    \r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={props.closed} clicked={props.opened}/>\r\n        <div className={props.closed?\"Sidedrawer Open\":\"Sidedrawer Close\"}>\r\n            <div className=\"logo\">\r\n            <Logo/>\r\n            </div>\r\n            <nav>\r\n            <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default Sidedrawer\r\n","import React, { useState } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Toolbar from './Navigation/Toolbar/Toolbar'\r\nimport './Layout.css'\r\nimport Sidedrawer from '../Sidedrawer/Sidedrawer'\r\nconst Layout = (props) => {\r\n    const [hide,setHide]=useState(false)\r\n    function sideDrawer(){\r\n         setHide((prevState)=>{\r\n             return !hide\r\n         })\r\n    }\r\n   return (\r\n   <Auxiliary >\r\n       <Sidedrawer\r\n         closed={hide} \r\n        opened={sideDrawer}\r\n        />\r\n    <div>\r\n        <Toolbar \r\n        closed={hide}\r\n        opened={sideDrawer}/>\r\n    </div>\r\n    <main className=\"Content\">\r\n        {props.children}\r\n    </main>\r\n    </Auxiliary>\r\n   )}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport './BurgerIngredients.css'\r\n// import PropTypes from 'prop-types'\r\nconst BurgerIngredients = (props) => {\r\n    let ingredient=null\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n            ingredient=<div className=\"BreadBottom\"></div>\r\n            break;\r\n            case('bread-top'):\r\n            ingredient=(\r\n                <div className=\"BreadTop\">\r\n                   <div className=\"Seeds1\"></div>\r\n                   <div className=\"Seeds2\"></div>\r\n                </div>\r\n            )\r\n            break;\r\n            case('meat'):\r\n            ingredient=<div className=\"Meat\"></div>\r\n            break;\r\n            case('cheese'):\r\n            ingredient=<div className=\"Cheese\"></div>\r\n            break;\r\n            case('bacon'):\r\n            ingredient=<div className=\"Bacon\"></div>\r\n            break;\r\n            case('salad'):\r\n            ingredient=<div className=\"Salad\"></div>\r\n            break;\r\n            default:\r\n                ingredient=null      \r\n        }\r\n       \r\n   return ingredient\r\n}\r\n// BurgerIngredients.propTypes={\r\n//     type: PropTypes.string.isRequired\r\n// }\r\n\r\nexport default BurgerIngredients \r\n","import React,{ useContext} from 'react'\r\nimport './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport { alertBanner,setAlertBanner } from '../../../Authentication'\r\n\r\nconst Burger = (props) => {\r\n    //transformation codes\r\n   // that is used to convert object(ingredients) into an array\r\n   //\"keys\" returns array of ingredients\r\n    let transformIngredients=Object.keys(props.ingredient)\r\n    //\"igKey\" is argument that represents keys like 'salad','cheese'\r\n    .map(igKey=>{\r\n        //creating array for ingredient which has more than 2 values, means 'Cheese: 2,salad: 3'.\r\n        // If ingredients is used 2 or more than 2 times, then create array for that ingredient\r\n        return [...Array(props.ingredient[igKey])].map((_,i)=>{\r\n            //\"_\" shows blank space(first argument), \"i\"  shows index of element(1,2,3 so on)\r\n            return <BurgerIngredients key={igKey + i} type={igKey}/>\r\n        })\r\n    })\r\n    //reduce function has 2 arguments. 1 argument shows previous value and 2 shows current value\r\n    .reduce((arr,el)=>{\r\n        // console.log(el)\r\n        return arr.concat(el)\r\n    },[])\r\n    if(transformIngredients.length===0){\r\n        transformIngredients=<p className='BurgerText'>Please start adding ingredients!</p>\r\n    }\r\n    const alert=useContext(alertBanner)\r\n    const setAlert=useContext(setAlertBanner)\r\n    const alertClose=()=>{\r\n        setAlert(false)\r\n    }\r\n  \r\n    return (\r\n       \r\n        <div className=\"Burger\">\r\n            \r\n         { alert?(\r\n                <>\r\n<div className='alert alert-warning alert-dismissible fade show' role=\"alert\">\r\n<div><strong>Congratulation!</strong> Your order placed successfully</div>\r\n<div onClick={alertClose} className=\"closeButton\" >X</div>\r\n</div>\r\n</>\r\n            ):null\r\n        }\r\n        \r\n                           <BurgerIngredients type=\"bread-top\"/>\r\n            {transformIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n","import React from 'react'\r\nimport './BuildControl.css'\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">{props.label}</div>\r\n<button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n<button className=\"More\" onClick={props.added}>More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControl\r\n","import React, { useState,useContext } from 'react'\r\nimport BuildControl from './BuildControl/BuildControl'\r\nimport './BuildControls.css'\r\n\r\nconst BuildControls = (props) => {\r\n  \r\n    const [control,setControl]=useState([\r\n        {label: 'Salad', type: 'salad'},\r\n        {label: 'Bacon', type: 'bacon'},\r\n        {label: 'Cheese', type: 'cheese'},\r\n        {label: 'Meat', type: 'meat'},\r\n    ])\r\n    return (\r\n        <div className=\"BuildControls\">\r\n            <p>Current Price: <strong> {props.price.toFixed(2)}</strong></p>\r\n            {control.map(ctrl=>(\r\n                <BuildControl \r\n                added={()=>props.ingredientAdded(ctrl.type)}\r\n                removed={()=>props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n                key={ctrl.label} \r\n                label={ctrl.label}/>\r\n            ))}\r\n            <button className=\"OrderButton\" \r\n            disabled={!props.purchase}\r\n            onClick={props.ordered}>\r\n                ORDER NOW\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControls\r\n","import React from 'react'\r\nimport './Modal.css'\r\nimport Auxiliary from \"../../../hoc/Auxiliary\"\r\nimport Backdrop from '../Backdrop'\r\nconst Modal = (props) => {\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop \r\n            show={props.show}\r\n            clicked={props.modalClosed}\r\n            />\r\n        <div className=\"Modal\" style={{transform: props.show? \r\n            'translateY(0)': 'translateY(-100)', \r\n            opacity: props.show ? '1':'0',\r\n            zIndex: props.show? '500':'-2'}}>\r\n            {props.children}\r\n        </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport './Button.css'\r\nconst OrderSummary = (props) => {\r\n    //transforming objects into an array and mapping to get all ingredients with added ingredient's value \r\n    const ingredientSummary=Object.keys(props.ingredients)\r\n    .map(igKey=>{\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>{igKey}</span>:{props.ingredients[igKey]}\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n{ingredientSummary}\r\n            </ul>\r\n            <p> <strong>Total Price: {props.price.toFixed(2)}</strong> </p>\r\n            <p>Continue to Checkout?</p>\r\n            <div className='summaryButton'>\r\n            <button className=\"Button\" style={{color: \"#944317\"}}\r\n             onClick={props.purchaseCancelled}>CANCEL</button>\r\n\r\n            <button className=\"Button Success\" \r\n            onClick={props.purchaseContinued}>CONTINUE</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary\r\n","import React from 'react'\r\nimport './Spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState,useContext } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Burger from '../../Components/Layout/Burger/Burger'\r\nimport BuildControls from '../../Components/Layout/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../UI/Backdrop/Modal/Modal'\r\nimport OrderSummary from '../../Components/Layout/Burger/OrderSummary/OrderSummary'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\nimport { setAlertBanner } from '../../Authentication'\r\nconst BurgerBuilder = () => {\r\n  const setAlert=useContext(setAlertBanner)\r\n  const [price,setPrice]=useState({\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0\r\n  })\r\n  const [ingredient,setIngredient]=useState({\r\n    salad: 0,\r\n    bacon: 0,\r\n    cheese: 0,\r\n    meat: 0\r\n  })\r\n  \r\n  const [total,setTotal]=useState(4)\r\n  const [purchaseable,setPurchaseable]=useState(false)\r\n  const [purchasing,setPurchasing]=useState(false)\r\nconst [loading,setLoading]=useState(false)\r\n  function purchaseHandler(){\r\nsetPurchasing(true)\r\nsetAlert(false)\r\n  }\r\n\r\n  function cancelPurchaseHandler(){\r\n    setPurchasing(false)\r\n  }\r\n\r\nconst history=useHistory()\r\n//for checkout burger ingredients  (link)\r\nconst queryParams=[];\r\nfor(let i in ingredient){\r\n \r\n  queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(ingredient[i]))\r\n  // encodeURIComponent(i) => salad etc\r\n  //encodeURIComponent(ingredient[i]) 1,2 etc\r\n  //console.log(encodeURIComponent(ingredient[i]))\r\n}\r\nqueryParams.push('price=' + total)\r\n//  console.log(queryParams[4])\r\n//to add \"&\" among arrays\r\nconst queryString=queryParams.join('&')\r\n//continue button\r\n  function PurchaseContinueHandler(){\r\n    history.push({\r\n      pathname:'/checkout',\r\n      search: '?' + queryString\r\n    })\r\n  }\r\n//to enable ORDER button if ingredeint is added \r\n function updatePurchaseState(ingredients){\r\nconst sum=Object.keys(ingredients)\r\n.map(igKey=>{\r\n  // console.log(ingredients[igKey])\r\n  return ingredients[igKey]\r\n  //ingredients[igKey] is values of ingredients\r\n})\r\n.reduce((sum,el)=>{\r\n \r\n  return sum + el\r\n},0)\r\n\r\nif(sum>0){\r\n  setPurchaseable(true)\r\n}\r\n  }\r\n function addIngredientHandler(type){\r\n//increasing/decreasing burger ingredients on clicking more/less\r\nconst oldCount=ingredient[type]\r\n// console.log(oldCount)\r\nconst updatedCount=oldCount+1\r\n// console.log(updatedCount)\r\n const updatedIngredients={\r\n   ...ingredient\r\n }\r\n updatedIngredients[type]=updatedCount\r\n const priceAddition=price[type]\r\n const oldPrice=total\r\n const newPrice=oldPrice+priceAddition\r\n setTotal(newPrice)\r\n setIngredient(updatedIngredients)\r\n updatePurchaseState(updatedIngredients)\r\n  }\r\nfunction removeIngredientHandler(type){\r\n  const oldCount=ingredient[type]\r\n  //to avoid error if length of array is negative\r\n  if(oldCount<=0){\r\n    return null\r\n  }\r\n  const updatedCount=oldCount-1\r\n   const updatedIngredients={\r\n     ...ingredient\r\n   }\r\n   updatedIngredients[type]=updatedCount\r\n   const priceAddition=price[type]\r\n   const oldPrice=total\r\n   const newPrice=oldPrice-priceAddition\r\n   setTotal(newPrice)\r\n   setIngredient(updatedIngredients)\r\n \r\n}\r\nconst disabledInfo={\r\n  ...ingredient\r\n}\r\n\r\nfor(let key in disabledInfo){\r\n  //disabledInfo[key] is value of ingredients \r\n disabledInfo[key]=disabledInfo[key]<=0\r\n}\r\n//disabledInfo = {salad:true, meat: false, ....}. if ingredient's value is false then it will be disabled\r\nlet orderSummary=  <OrderSummary \r\ningredients={ingredient}\r\npurchaseCancelled={cancelPurchaseHandler}\r\npurchaseContinued={PurchaseContinueHandler}\r\nprice={total}\r\n/>\r\nif(loading){\r\n  orderSummary=<Spinner/>\r\n}\r\n    return (\r\n        <Auxiliary>\r\n          <Modal \r\n          show={purchasing}\r\n          modalClosed={cancelPurchaseHandler}\r\n          >\r\n          {orderSummary}\r\n          </Modal>\r\n          <Burger ingredient={ingredient}/>\r\n<BuildControls \r\ningredientAdded={addIngredientHandler}\r\ningredientRemoved={removeIngredientHandler}\r\ndisabled={disabledInfo}\r\nprice={total}\r\npurchase={purchaseable}\r\nordered={purchaseHandler }\r\n/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default BurgerBuilder\r\n","import React from 'react'\r\nconst Button = (props) => {\r\n    return (\r\n        <div onClick={props.clicked} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Burger from '../../Burger'\r\nimport Button from '../../../../../UI/Button/Button'\r\nimport './CheckoutSummary.css'\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className=\"CheckoutSummary\">\r\n            <div style={{backGroundColor: '#F08E4A'}} className='alertBurger' role=\"alert\">\r\n<div><strong>Dear customer,</strong> We hope it tastes well!</div>\r\n</div>            \r\n             <div style={{width: '100%'}}>\r\n                <Burger ingredient={props.ingredients}/>\r\n            </div> \r\n            <div  className=\"Button \">\r\n            <Button\r\n            btnType=\"Danger\"\r\n            clicked={props.CheckoutCancelled}\r\n            ><span className=\"Success\">Cancel</span></Button>\r\n            <Button\r\n            btnType=\"Success\"\r\n            clicked={props.CheckoutContinued}\r\n            ><span className=\"Danger\">Continue</span></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary\r\n","import axios from \"axios\"\r\n\r\nconst instance =axios.create ({\r\n    baseURL: 'https://my-burger-app-b263a-default-rtdb.firebaseio.com/'\r\n})\r\n\r\nexport default instance\r\n\r\n\r\n","import React from 'react'\r\nimport './Input.css'\r\nconst Input = (props) => {\r\n    let inputElement=null\r\n    const inputClass=[\"InputElement\"]\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClass.push(\"Invalid\")\r\n    }\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputElement=<input\r\n        onChange={props.changed}\r\n         {...props.elementConfig} \r\n         value={props.value}\r\n        className={inputClass.join(' ')}/>\r\n        break;\r\n        case('textarea'):\r\n        inputElement=<textarea\r\n        onChange={props.changed}\r\n         {...props.elementConfig} \r\n         value={props.value}\r\n         className={inputClass}/>\r\n        break;\r\n        case('select'):\r\n        inputElement=(\r\n        <select\r\n        onChange={props.changed}\r\n         value={props.value}\r\n         className={inputClass}>\r\n             {props.elementConfig.options.map(option=>(\r\n                 <option \r\n                 key={option.value} \r\n                 value={option.value}>\r\n                     {option.displayValue}\r\n                 </option>\r\n             ))}\r\n         </select>\r\n        )\r\n        break;\r\n        default:\r\n            inputElement=<input \r\n            {...props.elementConfig} \r\n            className=\"InputElement\"/>\r\n    }\r\n   \r\n    return (\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, {  useContext, useState } from 'react'\r\nimport './ContactData.css'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../UI/Spinner/Spinner'\r\nimport Input from '../../../UI/Input/Input'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { setAlertBanner } from '../../../Authentication'\r\nconst ContactData = (props) => {\r\n    const history=useHistory()\r\n    const setAlert=useContext(setAlertBanner)\r\n    const [contact,setContact]=useState({\r\n      name:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Your Name'\r\n        },\r\n        value:'',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Street'\r\n        },\r\n        value:'',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      ZipCode:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'ZIP Code'\r\n        },\r\n        value:'',\r\n        validation:{\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Country'\r\n        },\r\n        value:'',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email:{\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type:'text',\r\n          placeholder:'Your E-Mail'\r\n        },\r\n        value:'',\r\n        validation:{\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod:{\r\n        elementType: 'select',\r\n        elementConfig:{\r\n          options:[\r\n            {value:'fastest', displayValue:'Fastest'},\r\n            {value:'cheapest', displayValue:'Cheapest'}\r\n          ]\r\n        },\r\n        value:'',\r\n        valid:true,\r\n        validation: {}\r\n      },\r\n    })\r\n    const [formIsValid,setformIsValid]=useState(false)\r\n    const [loading,setLoading]=useState(false)\r\n    //click to send order to databse\r\nfunction OrderHandler(event){\r\n        event.preventDefault()\r\n        const formData={}\r\n        for(let formElementIdentifier in contact){\r\n          formData[formElementIdentifier]=contact[formElementIdentifier].value\r\n    \r\n        }\r\n            setLoading(true)\r\n            // console.log(formData)       \r\n    //what we send to firebase database\r\n    const order={\r\n      ingredient: props.ingredients,\r\n       price: props.price,\r\n       orderData: formData\r\n  }\r\naxios.post('/orders.json',order)\r\n.then(response=>{\r\nsetAlert(true)\r\n  setLoading(false)\r\n \r\nhistory.push('/')\r\n})\r\n.catch(error=>{\r\n  setLoading(false)\r\n\r\n})\r\n    }\r\n    //converting obj into array of contact\r\n    let formElementArray=[]\r\n    for(let key in contact){\r\n      formElementArray.push({\r\n        id:key,\r\n        config: contact[key]\r\n      })\r\n    }\r\n// console.log(formElementArray)\r\n    function CHeckValidity(value,rules){\r\n      let isValid=true\r\n      if(!rules){\r\n        return true\r\n      }\r\n      if(rules.required){\r\n        isValid=value.trim()!==\"\" && isValid\r\n      }\r\n      if(rules.minLength){\r\n        isValid=value.length >= rules.minLength && isValid\r\n      }\r\n      if(rules.maxLength){\r\n        isValid=value.length <= rules.maxLength && isValid\r\n      }\r\n      return isValid\r\n    }\r\n\r\n    function InputChanged(event,inputIdentifier) {\r\n      //copying contact to updated contact\r\n      const updatedContact={\r\n        ...contact\r\n      }\r\n      //inputIdentifier=> shows which input field changed(key)\r\n      const updatedFormElement={\r\n        ...updatedContact[inputIdentifier]\r\n      }\r\n      updatedFormElement.value=event.target.value\r\n      updatedFormElement.valid=CHeckValidity(updatedFormElement.value,updatedFormElement.validation)\r\n      updatedFormElement.touched=true\r\n\r\n      updatedContact[inputIdentifier]=updatedFormElement\r\n//for disable button\r\n      let formisvalid=true\r\n      for(let inputIdentifier in updatedContact){\r\n        formisvalid=updatedContact[inputIdentifier].valid && formisvalid\r\n      }\r\n      setContact(updatedContact)\r\n      setformIsValid(formisvalid)\r\n    }\r\n   //dynamically adding form inputs\r\n    let form=(\r\n         <form onSubmit={OrderHandler}>\r\n           {formElementArray.map(formElement=>(\r\n            <Input \r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n             value={formElement.config.value} \r\n             invalid={!formElement.config.valid}\r\n             shouldValidate={formElement.config.validation}\r\n             touched={formElement.config.touched}\r\n             changed={(event)=>InputChanged(event,formElement.id)}\r\n             />\r\n           ))}\r\n        <button type=\"submit\" className=\"Button Success\" onClick={OrderHandler} disabled={!formIsValid}> Order</button>\r\n    </form>\r\n    )\r\n    if(loading){\r\n        form=<Spinner/>\r\n    }\r\n    return (\r\n        <div className=\"ContactData\">\r\n             <h4>Enter your Contact Data</h4>\r\n            {form}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactData\r\n","import React, { useState , useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CheckoutSummary from '../../Components/Layout/Burger/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\nimport { Route } from 'react-router-dom';\r\nconst Checkout = (props) => {\r\n    const [ingredients,setIngredients]=useState(1)\r\n    const [price,setPrice]=useState(0)\r\n//for dynamic ingredients of burger which were selected in checkout\r\nuseEffect(() => {\r\n    const query=new URLSearchParams(props.location.search)\r\n    const ingredient={}\r\n    let price=0\r\n    for(let param of query.entries()){\r\n        //['salad','1']\r\n        if(param[0]==='price'){\r\n            price=param[1]\r\n        }\r\n        else{\r\n            ingredient[param[0]]=+param[1]\r\n        }\r\n    }\r\n    setIngredients(ingredient) \r\n    setPrice(price)\r\n},[])\r\n\r\nconst history=useHistory()\r\nfunction CheckoutCancelHandler() {\r\n     history.push('/')\r\n}\r\nfunction CheckoutContinuedHandler(){\r\n    history.replace('/checkout/contact-data')\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSummary \r\n            ingredients={ingredients}\r\n            CheckoutCancelled={CheckoutCancelHandler}\r\n            CheckoutContinued={CheckoutContinuedHandler}\r\n            />\r\n             <Route \r\n             path={props.match.path + '/contact-data'}\r\n             render={()=>(<ContactData price={price} ingredients={ingredients}/>)}\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import React from 'react'\r\nimport './Order.css'\r\nconst Order = (props) => {\r\n\r\n      //way to convert object into an array\r\n        const ingredients=[]\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n           name: ingredientName,\r\n           amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    \r\n    const ingredientOutput=ingredients.map(ig=>{\r\n        return  <span \r\n        style={{\r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border :'1px solid #ccc',\r\n            padding:'5px'\r\n        }}\r\n        key={ig.name}>{ig.name} {ig.amount}</span>  \r\n    })\r\n\r\n    return (\r\n        <>\r\n        \r\n               <div className=\"Order\">\r\n               <p>Ingredients:\r\n                       {ingredientOutput}   \r\n                    </p>\r\n               <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n           </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","import React, { useEffect, useState } from 'react'\r\nimport Order from '../../Components/Layout/Burger/Order/CheckoutSummary/Order'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\nimport './Orders.css'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Orders = () => {\r\n    const [orders,setOrders]=useState([])\r\n    const [loading,setLoading]=useState(true)\r\n   \r\n    useEffect(()=>{\r\n        axios.get('/orders.json')\r\n        .then(res=>{\r\n            setLoading(false)\r\n            const fetchOrders=[]\r\n            for(let key in res.data){\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                })\r\n            }  \r\nsetOrders(fetchOrders)\r\n        })\r\n        .catch(err=>{\r\n            setLoading(false)\r\n        })\r\n    },[])\r\n// console.log(orders)\r\n    let order= null\r\n    let orderLength=null\r\n    if(orders.length){\r\n       orderLength=(\r\n        order=orders.map(order=>(\r\n            <Order \r\n            length={orders.length}\r\n            key={order.id}\r\n            ingredients={order.ingredient}\r\n            price={order.price}\r\n            />)\r\n            )\r\n       )\r\n    }\r\n    else{\r\n        orderLength=(\r\n        <div className='NoOrder'>\r\n        <div>No order yet</div>\r\n       <NavLink to='/'><button className='NoOrderButton'>Order Now</button></NavLink> \r\n        </div>\r\n        )\r\n    }\r\n\r\n        if(loading){\r\n            order= <Spinner/>\r\n         }\r\n         else{\r\n         order=orderLength\r\n         }\r\n    return (\r\n        <div>  \r\n        {order}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","import React, { createContext} from 'react'\r\nimport {  useState } from 'react';\r\nimport auth from './authentication/fire';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './authentication/Login';\r\nimport Layout from './Components/Layout/Layout';\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './container/Checkout/Checkout';\r\nimport Orders from './container/Orders/Orders';\r\n\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n  } from \"firebase/auth\"\r\nimport Spinner from './UI/Spinner/Spinner';\r\n  const logoutButton=createContext()\r\n  const userName=createContext()\r\n  const alertBanner=createContext()\r\n  const setAlertBanner=createContext()\r\nconst Authentication = () => {\r\n  let [alert,setAlert]=useState(false)\r\n    const [password,setPassword]=useState(\"\")\r\n  const [email,setEmail]=useState(\"\")\r\n  const [emailError,setEmailError]=useState()\r\n  const [passwordError,setPasswordError]=useState()\r\n  const [hasAccount,sethasAccount]=useState(false)\r\n  const [user,setUser]=useState(\"\")\r\n  const [load,setLoad]=useState(true)\r\n  const [lod,setLod]=useState(false)\r\n\r\n  const clearInputs=()=>{\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  }\r\n\r\n  onAuthStateChanged(auth,(currentUser)=>{\r\n    setUser(currentUser)\r\n  \r\n  })\r\n  const Name=user?.email\r\n\r\n  const register=async()=>{\r\n    setLoad(false)\r\n    clearErrors()\r\n    const user=createUserWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    setLoad(true)\r\n    switch(err.code){\r\n      case \"auth/email-already-in-use\":\r\n        setEmailError(\"*Email already in use\")\r\n        break\r\n        case \"auth/invalid-email\":\r\n            setEmailError(\"*Invalid Email\")\r\n            break\r\n            case \"auth/weak-password\":\r\n              setPasswordError(\"*Password should be atleast 6 characters\")\r\n              break\r\n              default:\r\n                setEmailError('')\r\n    }\r\n  })\r\n  }\r\n  \r\n  const login=()=>{\r\n    setLoad(false)\r\n    clearErrors()\r\n  const user=signInWithEmailAndPassword(auth,email,password)\r\n  .catch((err)=>{\r\n    setLoad(true)\r\n    switch(err.code){\r\n      case \"auth/Invalid-email\":\r\n        setEmailError(\"*Invalid Email\")\r\n        break\r\n        case \"auth/user-disabled\":\r\n          setEmailError(\"*User is disabled\")\r\n          break\r\n          case \"auth/user-not-found\":\r\n            setEmailError(\"*User not found\")\r\n            break\r\n            case \"auth/wrong-password\":\r\n              setPasswordError(\"*Wrong password\")\r\n              break\r\n              default:\r\n                setEmailError('')\r\n    }\r\n  })\r\n  }\r\n\r\n  const logout=()=>{\r\n     signOut(auth)\r\n     setLoad(true)\r\n     clearErrors()\r\n     clearInputs()\r\n  }\r\n\r\n  \r\n    return (\r\n        <div>          \r\n              {user?(\r\n                \r\n               <logoutButton.Provider value={logout}>\r\n               <userName.Provider value={Name}>\r\n                 <setAlertBanner.Provider value={setAlert}>\r\n                   <alertBanner.Provider value={alert}>\r\n           <Layout>\r\n           <Switch>\r\n                   <Route path=\"/\" exact component={BurgerBuilder} />\r\n                   <Route path=\"/checkout\"  component={Checkout} />\r\n                   <Route path=\"/orders\"  component={Orders}/>\r\n           </Switch>\r\n       </Layout>\r\n       </alertBanner.Provider>\r\n      </setAlertBanner.Provider>\r\n       </userName.Provider>\r\n      </logoutButton.Provider>\r\n      ):(\r\n        <Login\r\n        email={email}\r\n        password={password}\r\n        setEmail={setEmail}\r\n        setPassword={setPassword}\r\n        handleSignup={register}\r\n        handleLogin={login}\r\n        emailError={emailError}\r\n        passwordError={passwordError}\r\n        hasAccount={hasAccount}\r\n        setHasAccount={sethasAccount}\r\n        load={load}\r\n        />\r\n      )}\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication\r\nexport {logoutButton , userName, alertBanner, setAlertBanner}\r\n","import React from 'react'\nimport Authentication from './Authentication';\n\nconst App = () => {\n  \n    return (\n        <div>\n            <Authentication/>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}